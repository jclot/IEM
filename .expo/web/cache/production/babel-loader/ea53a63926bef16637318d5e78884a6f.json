{"ast":null,"code":"function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}import*as React from'react';import Text from\"react-native-web/dist/exports/Text\";import Platform from\"react-native-web/dist/exports/Platform\";import useLinkProps from\"./useLinkProps\";export default function Link(_ref){var to=_ref.to,action=_ref.action,rest=_objectWithoutProperties(_ref,[\"to\",\"action\"]);var props=useLinkProps({to:to,action:action});var onPress=function onPress(e){if('onPress'in rest){var _rest$onPress;(_rest$onPress=rest.onPress)===null||_rest$onPress===void 0?void 0:_rest$onPress.call(rest,e);}props.onPress(e);};return React.createElement(Text,_objectSpread(_objectSpread(_objectSpread({},props),rest),Platform.select({web:{onClick:onPress},default:{onPress:onPress}})));}","map":{"version":3,"sources":["Link.tsx"],"names":["action","rest","props","useLinkProps","to","onPress","e","web","onClick","default"],"mappings":"0pDAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,kHAGA,MAAA,CAAA,YAAA,sBAmBA,cAAe,SAAA,CAAA,IAAA,CAAA,IAAA,CAA8C,IAAhC,CAAA,EAAgC,CAAA,IAAA,CAAhC,EAAgC,CAA1BA,MAA0B,CAAA,IAAA,CAA1BA,MAA0B,CAAfC,IAAe,CAAA,wBAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,CAC3D,GAAMC,CAAAA,KAAK,CAAGC,YAAY,CAAC,CAAEC,EAAF,CAAEA,EAAF,CAAMJ,MAAAA,CAAAA,MAAN,CAAD,CAA1B,CAEA,GAAMK,CAAAA,OAAO,CACXC,QADID,CAAAA,OACJC,CAAAA,CADc,CAEX,CACH,GAAI,WAAJ,CAAA,IAAA,CAAuB,CAAA,GAAA,CAAA,aAAA,CACrB,CAAA,aAAA,CAAA,IAAI,CAAJ,OAAA,IAAA,IAAA,EAAA,aAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CACD,CAEDJ,KAAK,CAALA,OAAAA,CAAAA,CAAAA,EAPF,CAAA,CAUA,MAAO,CAAA,KAAK,CAAL,aAAA,CAAA,IAAA,CAAA,aAAA,CAAA,aAAA,CAAA,aAAA,CAAA,EAAA,CAAA,KAAA,CAAA,CAAA,IAAA,CAAA,CAGF,QAAQ,CAAR,MAAA,CAAgB,CACjBK,GAAG,CAAE,CAAEC,OAAO,CAAEH,OAAX,CADY,CAEjBI,OAAO,CAAE,CAAEJ,OAAAA,CAAAA,OAAF,CAFQ,CAAhB,CAHE,CAAA,CAAP,CAQD","sourcesContent":["import * as React from 'react';\nimport { Text, TextProps, GestureResponderEvent, Platform } from 'react-native';\nimport type { NavigationAction } from '@react-navigation/core';\nimport useLinkProps from './useLinkProps';\n\ntype Props = {\n  to: string;\n  action?: NavigationAction;\n  target?: string;\n  onPress?: (\n    e: React.MouseEvent<HTMLAnchorElement, MouseEvent> | GestureResponderEvent\n  ) => void;\n} & (TextProps & { children: React.ReactNode });\n\n/**\n * Component to render link to another screen using a path.\n * Uses an anchor tag on the web.\n *\n * @param props.to Absolute path to screen (e.g. `/feeds/hot`).\n * @param props.action Optional action to use for in-page navigation. By default, the path is parsed to an action based on linking config.\n * @param props.children Child elements to render the content.\n */\nexport default function Link({ to, action, ...rest }: Props) {\n  const props = useLinkProps({ to, action });\n\n  const onPress = (\n    e: React.MouseEvent<HTMLAnchorElement, MouseEvent> | GestureResponderEvent\n  ) => {\n    if ('onPress' in rest) {\n      rest.onPress?.(e);\n    }\n\n    props.onPress(e);\n  };\n\n  return React.createElement(Text, {\n    ...props,\n    ...rest,\n    ...Platform.select({\n      web: { onClick: onPress } as any,\n      default: { onPress },\n    }),\n  });\n}\n"]},"metadata":{},"sourceType":"module"}