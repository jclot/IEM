{"ast":null,"code":"function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}export default function getActionFromState(state){if(state.routes.length===0){return undefined;}var route=state.routes[state.routes.length-1];var payload={name:route.name,params:_objectSpread({},route.params)};var current=route.state;var params=payload.params;while(current){if(current.routes.length===0){return undefined;}route=current.routes[current.routes.length-1];params.initial=current.routes.length===1;params.screen=route.name;if(route.state){params.params=_objectSpread({},route.params);params=params.params;}else{params.params=route.params;}current=route.state;}return{type:'NAVIGATE',payload:payload};}","map":{"version":3,"sources":["getActionFromState.tsx"],"names":["state","route","payload","name","params","current","type"],"mappings":"k9BAaA,cAAe,SAAA,CAAA,kBAAA,CAAA,KAAA,CAEe,CAC5B,GAAIA,KAAK,CAALA,MAAAA,CAAAA,MAAAA,GAAJ,CAAA,CAA+B,CAC7B,MAAA,CAAA,SAAA,CAF0B,CAO5B,GAAIC,CAAAA,KAAK,CAAGD,KAAK,CAALA,MAAAA,CAAaA,KAAK,CAALA,MAAAA,CAAAA,MAAAA,CAAzB,CAAYA,CAAZ,CAEA,GAAIE,CAAAA,OAAiD,CAAG,CACtDC,IAAI,CAAEF,KAAK,CAD2C,IAAA,CAEtDG,MAAM,CAAA,aAAA,CAAA,EAAA,CAAOH,KAAK,CAAZ,MAAA,CAFgD,CAAxD,CAKA,GAAII,CAAAA,OAAO,CAAGJ,KAAK,CAAnB,KAAA,CACA,GAAIG,CAAAA,MAAM,CAAGF,OAAO,CAApB,MAAA,CAEA,MAAA,OAAA,CAAgB,CACd,GAAIG,OAAO,CAAPA,MAAAA,CAAAA,MAAAA,GAAJ,CAAA,CAAiC,CAC/B,MAAA,CAAA,SAAA,CACD,CAEDJ,KAAK,CAAGI,OAAO,CAAPA,MAAAA,CAAeA,OAAO,CAAPA,MAAAA,CAAAA,MAAAA,CAAvBJ,CAAQI,CAARJ,CACAG,MAAM,CAANA,OAAAA,CAAiBC,OAAO,CAAPA,MAAAA,CAAAA,MAAAA,GAAjBD,CAAAA,CACAA,MAAM,CAANA,MAAAA,CAAgBH,KAAK,CAArBG,IAAAA,CAEA,GAAIH,KAAK,CAAT,KAAA,CAAiB,CACfG,MAAM,CAANA,MAAAA,CAAAA,aAAAA,CAAAA,EAAAA,CAAqBH,KAAK,CAA1BG,MAAAA,CAAAA,CACAA,MAAM,CAAGA,MAAM,CAAfA,MAAAA,CAFF,CAAA,IAGO,CACLA,MAAM,CAANA,MAAAA,CAAgBH,KAAK,CAArBG,MAAAA,CACD,CAEDC,OAAO,CAAGJ,KAAK,CAAfI,KAAAA,CACD,CAED,MAAO,CACLC,IAAI,CADC,UAAA,CAELJ,OAAAA,CAAAA,OAFK,CAAP,CAID","sourcesContent":["import type { PartialState, NavigationState } from '@react-navigation/routers';\n\ntype NavigateParams = {\n  screen?: string;\n  params?: NavigateParams;\n  initial?: boolean;\n};\n\ntype NavigateAction = {\n  type: 'NAVIGATE';\n  payload: { name: string; params: NavigateParams };\n};\n\nexport default function getActionFromState(\n  state: PartialState<NavigationState>\n): NavigateAction | undefined {\n  if (state.routes.length === 0) {\n    return undefined;\n  }\n\n  // Try to construct payload for a `NAVIGATE` action from the state\n  // This lets us preserve the navigation state and not lose it\n  let route = state.routes[state.routes.length - 1];\n\n  let payload: { name: string; params: NavigateParams } = {\n    name: route.name,\n    params: { ...route.params },\n  };\n\n  let current = route.state;\n  let params = payload.params;\n\n  while (current) {\n    if (current.routes.length === 0) {\n      return undefined;\n    }\n\n    route = current.routes[current.routes.length - 1];\n    params.initial = current.routes.length === 1;\n    params.screen = route.name;\n\n    if (route.state) {\n      params.params = { ...route.params };\n      params = params.params;\n    } else {\n      params.params = route.params;\n    }\n\n    current = route.state;\n  }\n\n  return {\n    type: 'NAVIGATE',\n    payload,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}