{"ast":null,"code":"function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}import React from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Platform from\"react-native-web/dist/exports/Platform\";import{Link,useTheme}from'@react-navigation/native';import Color from'color';import TabBarIcon from\"./TabBarIcon\";export default function BottomTabBarItem(_ref2){var focused=_ref2.focused,route=_ref2.route,label=_ref2.label,icon=_ref2.icon,badge=_ref2.badge,to=_ref2.to,_ref2$button=_ref2.button,button=_ref2$button===void 0?function(_ref){var children=_ref.children,style=_ref.style,_onPress=_ref.onPress,to=_ref.to,accessibilityRole=_ref.accessibilityRole,rest=_objectWithoutProperties(_ref,[\"children\",\"style\",\"onPress\",\"to\",\"accessibilityRole\"]);if(Platform.OS==='web'&&to){return React.createElement(Link,_extends({},rest,{to:to,style:[styles.button,style],onPress:function onPress(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)&&(e.button==null||e.button===0)){e.preventDefault();_onPress===null||_onPress===void 0?void 0:_onPress(e);}}}),children);}else{return React.createElement(TouchableWithoutFeedback,_extends({},rest,{accessibilityRole:accessibilityRole,onPress:_onPress}),React.createElement(View,{style:style},children));}}:_ref2$button,accessibilityLabel=_ref2.accessibilityLabel,testID=_ref2.testID,onPress=_ref2.onPress,onLongPress=_ref2.onLongPress,horizontal=_ref2.horizontal,customActiveTintColor=_ref2.activeTintColor,customInactiveTintColor=_ref2.inactiveTintColor,_ref2$activeBackgroun=_ref2.activeBackgroundColor,activeBackgroundColor=_ref2$activeBackgroun===void 0?'transparent':_ref2$activeBackgroun,_ref2$inactiveBackgro=_ref2.inactiveBackgroundColor,inactiveBackgroundColor=_ref2$inactiveBackgro===void 0?'transparent':_ref2$inactiveBackgro,_ref2$showLabel=_ref2.showLabel,showLabel=_ref2$showLabel===void 0?true:_ref2$showLabel,allowFontScaling=_ref2.allowFontScaling,labelStyle=_ref2.labelStyle,iconStyle=_ref2.iconStyle,style=_ref2.style;var _useTheme=useTheme(),colors=_useTheme.colors;var activeTintColor=customActiveTintColor===undefined?colors.primary:customActiveTintColor;var inactiveTintColor=customInactiveTintColor===undefined?Color(colors.text).mix(Color(colors.card),0.5).hex():customInactiveTintColor;var renderLabel=function renderLabel(_ref3){var focused=_ref3.focused;if(showLabel===false){return null;}var color=focused?activeTintColor:inactiveTintColor;if(typeof label==='string'){return React.createElement(Text,{numberOfLines:1,style:[styles.label,{color:color},horizontal?styles.labelBeside:styles.labelBeneath,labelStyle],allowFontScaling:allowFontScaling},label);}return label({focused:focused,color:color,position:horizontal?'beside-icon':'below-icon'});};var renderIcon=function renderIcon(_ref4){var focused=_ref4.focused;if(icon===undefined){return null;}var activeOpacity=focused?1:0;var inactiveOpacity=focused?0:1;return React.createElement(TabBarIcon,{route:route,horizontal:horizontal,badge:badge,activeOpacity:activeOpacity,inactiveOpacity:inactiveOpacity,activeTintColor:activeTintColor,inactiveTintColor:inactiveTintColor,renderIcon:icon,style:iconStyle});};var scene={route:route,focused:focused};var backgroundColor=focused?activeBackgroundColor:inactiveBackgroundColor;return button({to:to,onPress:onPress,onLongPress:onLongPress,testID:testID,accessibilityLabel:accessibilityLabel,accessibilityRole:'button',accessibilityState:{selected:focused},accessibilityStates:focused?['selected']:[],style:[styles.tab,{backgroundColor:backgroundColor},horizontal?styles.tabLandscape:styles.tabPortrait,style],children:React.createElement(React.Fragment,null,renderIcon(scene),renderLabel(scene))});}var styles=StyleSheet.create({tab:{flex:1,alignItems:'center'},tabPortrait:{justifyContent:'flex-end',flexDirection:'column'},tabLandscape:{justifyContent:'center',flexDirection:'row'},label:{textAlign:'center',backgroundColor:'transparent'},labelBeneath:{fontSize:10},labelBeside:{fontSize:13,marginLeft:20,marginTop:3},button:{display:'flex'}});","map":{"version":3,"sources":["BottomTabItem.tsx"],"names":["button","onPress","accessibilityRole","rest","Platform","styles","e","style","activeTintColor","inactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","showLabel","colors","useTheme","customActiveTintColor","customInactiveTintColor","Color","renderLabel","focused","color","horizontal","allowFontScaling","label","position","renderIcon","icon","activeOpacity","inactiveOpacity","iconStyle","scene","route","backgroundColor","to","onLongPress","testID","accessibilityLabel","accessibilityState","selected","accessibilityStates","children","tab","flex","alignItems","tabPortrait","justifyContent","flexDirection","tabLandscape","textAlign","labelBeneath","fontSize","labelBeside","marginLeft","marginTop","display"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  View,\n  Text,\n  TouchableWithoutFeedback,\n  StyleSheet,\n  Platform,\n  StyleProp,\n  ViewStyle,\n  TextStyle,\n  GestureResponderEvent,\n} from 'react-native';\nimport { Link, Route, useTheme } from '@react-navigation/native';\nimport Color from 'color';\n\nimport TabBarIcon from './TabBarIcon';\nimport type { BottomTabBarButtonProps, LabelPosition } from '../types';\n\ntype Props = {\n  /**\n   * Whether the tab is focused.\n   */\n  focused: boolean;\n  /**\n   * The route object which should be specified by the tab.\n   */\n  route: Route<string>;\n  /**\n   * The label text of the tab.\n   */\n  label:\n    | string\n    | ((props: {\n        focused: boolean;\n        color: string;\n        position: LabelPosition;\n      }) => React.ReactNode);\n  /**\n   * Icon to display for the tab.\n   */\n  icon?: (props: {\n    focused: boolean;\n    size: number;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Text to show in a badge on the tab icon.\n   */\n  badge?: number | string;\n  /**\n   * URL to use for the link to the tab.\n   */\n  to?: string;\n  /**\n   * The button for the tab. Uses a `TouchableWithoutFeedback` by default.\n   */\n  button?: (props: BottomTabBarButtonProps) => React.ReactNode;\n  /**\n   * The accessibility label for the tab.\n   */\n  accessibilityLabel?: string;\n  /**\n   * An unique ID for testing for the tab.\n   */\n  testID?: string;\n  /**\n   * Function to execute on press in React Native.\n   * On the web, this will use onClick.\n   */\n  onPress: (\n    e: React.MouseEvent<HTMLElement, MouseEvent> | GestureResponderEvent\n  ) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress: (e: GestureResponderEvent) => void;\n  /**\n   * Whether the label should be aligned with the icon horizontally.\n   */\n  horizontal: boolean;\n  /**\n   * Color for the icon and label when the item is active.\n   */\n  activeTintColor?: string;\n  /**\n   * Color for the icon and label when the item is inactive.\n   */\n  inactiveTintColor?: string;\n  /**\n   * Background color for item when its active.\n   */\n  activeBackgroundColor?: string;\n  /**\n   * Background color for item when its inactive.\n   */\n  inactiveBackgroundColor?: string;\n  /**\n   * Whether to show the label text for the tab.\n   */\n  showLabel?: boolean;\n  /**\n   * Whether to allow scaling the font for the label for accessibility purposes.\n   */\n  allowFontScaling?: boolean;\n  /**\n   * Style object for the label element.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * Style object for the icon element.\n   */\n  iconStyle?: StyleProp<ViewStyle>;\n  /**\n   * Style object for the wrapper element.\n   */\n  style?: StyleProp<ViewStyle>;\n};\n\nexport default function BottomTabBarItem({\n  focused,\n  route,\n  label,\n  icon,\n  badge,\n  to,\n  button = ({\n    children,\n    style,\n    onPress,\n    to,\n    accessibilityRole,\n    ...rest\n  }: BottomTabBarButtonProps) => {\n    if (Platform.OS === 'web' && to) {\n      // React Native Web doesn't forward `onClick` if we use `TouchableWithoutFeedback`.\n      // We need to use `onClick` to be able to prevent default browser handling of links.\n      return (\n        <Link\n          {...rest}\n          to={to}\n          style={[styles.button, style]}\n          onPress={(e: any) => {\n            if (\n              !(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && // ignore clicks with modifier keys\n              (e.button == null || e.button === 0) // ignore everything but left clicks\n            ) {\n              e.preventDefault();\n              onPress?.(e);\n            }\n          }}\n        >\n          {children}\n        </Link>\n      );\n    } else {\n      return (\n        <TouchableWithoutFeedback\n          {...rest}\n          accessibilityRole={accessibilityRole}\n          onPress={onPress}\n        >\n          <View style={style}>{children}</View>\n        </TouchableWithoutFeedback>\n      );\n    }\n  },\n  accessibilityLabel,\n  testID,\n  onPress,\n  onLongPress,\n  horizontal,\n  activeTintColor: customActiveTintColor,\n  inactiveTintColor: customInactiveTintColor,\n  activeBackgroundColor = 'transparent',\n  inactiveBackgroundColor = 'transparent',\n  showLabel = true,\n  allowFontScaling,\n  labelStyle,\n  iconStyle,\n  style,\n}: Props) {\n  const { colors } = useTheme();\n\n  const activeTintColor =\n    customActiveTintColor === undefined\n      ? colors.primary\n      : customActiveTintColor;\n\n  const inactiveTintColor =\n    customInactiveTintColor === undefined\n      ? Color(colors.text).mix(Color(colors.card), 0.5).hex()\n      : customInactiveTintColor;\n\n  const renderLabel = ({ focused }: { focused: boolean }) => {\n    if (showLabel === false) {\n      return null;\n    }\n\n    const color = focused ? activeTintColor : inactiveTintColor;\n\n    if (typeof label === 'string') {\n      return (\n        <Text\n          numberOfLines={1}\n          style={[\n            styles.label,\n            { color },\n            horizontal ? styles.labelBeside : styles.labelBeneath,\n            labelStyle,\n          ]}\n          allowFontScaling={allowFontScaling}\n        >\n          {label}\n        </Text>\n      );\n    }\n\n    return label({\n      focused,\n      color,\n      position: horizontal ? 'beside-icon' : 'below-icon',\n    });\n  };\n\n  const renderIcon = ({ focused }: { focused: boolean }) => {\n    if (icon === undefined) {\n      return null;\n    }\n\n    const activeOpacity = focused ? 1 : 0;\n    const inactiveOpacity = focused ? 0 : 1;\n\n    return (\n      <TabBarIcon\n        route={route}\n        horizontal={horizontal}\n        badge={badge}\n        activeOpacity={activeOpacity}\n        inactiveOpacity={inactiveOpacity}\n        activeTintColor={activeTintColor}\n        inactiveTintColor={inactiveTintColor}\n        renderIcon={icon}\n        style={iconStyle}\n      />\n    );\n  };\n\n  const scene = { route, focused };\n\n  const backgroundColor = focused\n    ? activeBackgroundColor\n    : inactiveBackgroundColor;\n\n  return button({\n    to,\n    onPress,\n    onLongPress,\n    testID,\n    accessibilityLabel,\n    accessibilityRole: 'button',\n    accessibilityState: { selected: focused },\n    // @ts-expect-error: keep for compatibility with older React Native versions\n    accessibilityStates: focused ? ['selected'] : [],\n    style: [\n      styles.tab,\n      { backgroundColor },\n      horizontal ? styles.tabLandscape : styles.tabPortrait,\n      style,\n    ],\n    children: (\n      <React.Fragment>\n        {renderIcon(scene)}\n        {renderLabel(scene)}\n      </React.Fragment>\n    ),\n  }) as React.ReactElement;\n}\n\nconst styles = StyleSheet.create({\n  tab: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column',\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n  },\n  labelBeneath: {\n    fontSize: 10,\n  },\n  labelBeside: {\n    fontSize: 13,\n    marginLeft: 20,\n    marginTop: 3,\n  },\n  button: {\n    display: 'flex',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}