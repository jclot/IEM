{"ast":null,"code":"import*as React from'react';import CurrentRenderContext from\"./CurrentRenderContext\";export default function useCurrentRender(_ref){var state=_ref.state,navigation=_ref.navigation,descriptors=_ref.descriptors;var current=React.useContext(CurrentRenderContext);if(current&&navigation.isFocused()){current.options=descriptors[state.routes[state.index].key].options;}}","map":{"version":3,"sources":["useCurrentRender.tsx"],"names":["descriptors","current","React","navigation","state"],"mappings":"AAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,CAEA,MAAA,CAAA,oBAAA,8BAeA,cAAe,SAAA,CAAA,gBAAA,MAIH,IAJ6B,CAAA,KAI7B,MAJ6B,KAI7B,CAJ6B,UAI7B,MAJ6B,UAI7B,CADVA,WACU,MADVA,WACU,CACV,GAAMC,CAAAA,OAAO,CAAGC,KAAK,CAALA,UAAAA,CAAhB,oBAAgBA,CAAhB,CAEA,GAAID,OAAO,EAAIE,UAAU,CAAzB,SAAeA,EAAf,CAAuC,CACrCF,OAAO,CAAPA,OAAAA,CAAkBD,WAAW,CAACI,KAAK,CAALA,MAAAA,CAAaA,KAAK,CAAlBA,KAAAA,EAAZJ,GAAW,CAAXA,CAAlBC,OAAAA,CACD,CACF","sourcesContent":["import * as React from 'react';\nimport type { NavigationState, ParamListBase } from '@react-navigation/routers';\nimport CurrentRenderContext from './CurrentRenderContext';\nimport type { Descriptor, NavigationHelpers } from './types';\n\ntype Options = {\n  state: NavigationState;\n  navigation: NavigationHelpers<ParamListBase>;\n  descriptors: {\n    [key: string]: Descriptor<ParamListBase, string, NavigationState, object>;\n  };\n};\n\n/**\n * Write the current options, so that server renderer can get current values\n * Mutating values like this is not safe in async mode, but it doesn't apply to SSR\n */\nexport default function useCurrentRender({\n  state,\n  navigation,\n  descriptors,\n}: Options) {\n  const current = React.useContext(CurrentRenderContext);\n\n  if (current && navigation.isFocused()) {\n    current.options = descriptors[state.routes[state.index].key].options;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}