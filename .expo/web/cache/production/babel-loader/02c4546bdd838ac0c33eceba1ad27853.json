{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import React from'react';import View from\"react-native-web/dist/exports/View\";import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Platform from\"react-native-web/dist/exports/Platform\";import{NavigationContext,NavigationRouteContext,CommonActions,useTheme,useLinkBuilder}from'@react-navigation/native';import{useSafeArea}from'react-native-safe-area-context';import BottomTabItem from\"./BottomTabItem\";import useWindowDimensions from\"../utils/useWindowDimensions\";import useIsKeyboardShown from\"../utils/useIsKeyboardShown\";var DEFAULT_TABBAR_HEIGHT=49;var DEFAULT_MAX_TAB_ITEM_WIDTH=125;var useNativeDriver=Platform.OS!=='web';export default function BottomTabBar(_ref){var state=_ref.state,navigation=_ref.navigation,descriptors=_ref.descriptors,activeBackgroundColor=_ref.activeBackgroundColor,activeTintColor=_ref.activeTintColor,_ref$adaptive=_ref.adaptive,adaptive=_ref$adaptive===void 0?true:_ref$adaptive,allowFontScaling=_ref.allowFontScaling,inactiveBackgroundColor=_ref.inactiveBackgroundColor,inactiveTintColor=_ref.inactiveTintColor,_ref$keyboardHidesTab=_ref.keyboardHidesTabBar,keyboardHidesTabBar=_ref$keyboardHidesTab===void 0?false:_ref$keyboardHidesTab,labelPosition=_ref.labelPosition,labelStyle=_ref.labelStyle,iconStyle=_ref.iconStyle,safeAreaInsets=_ref.safeAreaInsets,showLabel=_ref.showLabel,style=_ref.style,tabStyle=_ref.tabStyle;var _safeAreaInsets$top,_safeAreaInsets$right,_safeAreaInsets$botto,_safeAreaInsets$left;var _useTheme=useTheme(),colors=_useTheme.colors;var buildLink=useLinkBuilder();var focusedRoute=state.routes[state.index];var focusedDescriptor=descriptors[focusedRoute.key];var focusedOptions=focusedDescriptor.options;var dimensions=useWindowDimensions();var isKeyboardShown=useIsKeyboardShown();var shouldShowTabBar=focusedOptions.tabBarVisible!==false&&!(keyboardHidesTabBar&&isKeyboardShown);var visibilityAnimationConfigRef=React.useRef(focusedOptions.tabBarVisibilityAnimationConfig);React.useEffect(function(){visibilityAnimationConfigRef.current=focusedOptions.tabBarVisibilityAnimationConfig;});var _React$useState=React.useState(!shouldShowTabBar),_React$useState2=_slicedToArray(_React$useState,2),isTabBarHidden=_React$useState2[0],setIsTabBarHidden=_React$useState2[1];var _React$useState3=React.useState(function(){return new Animated.Value(shouldShowTabBar?1:0);}),_React$useState4=_slicedToArray(_React$useState3,1),visible=_React$useState4[0];React.useEffect(function(){var visibilityAnimationConfig=visibilityAnimationConfigRef.current;if(shouldShowTabBar){var _visibilityAnimationC,_visibilityAnimationC2;var animation=(visibilityAnimationConfig===null||visibilityAnimationConfig===void 0?void 0:(_visibilityAnimationC=visibilityAnimationConfig.show)===null||_visibilityAnimationC===void 0?void 0:_visibilityAnimationC.animation)==='spring'?Animated.spring:Animated.timing;animation(visible,_objectSpread({toValue:1,useNativeDriver:useNativeDriver,duration:250},visibilityAnimationConfig===null||visibilityAnimationConfig===void 0?void 0:(_visibilityAnimationC2=visibilityAnimationConfig.show)===null||_visibilityAnimationC2===void 0?void 0:_visibilityAnimationC2.config)).start(function(_ref2){var finished=_ref2.finished;if(finished){setIsTabBarHidden(false);}});}else{var _visibilityAnimationC3,_visibilityAnimationC4;setIsTabBarHidden(true);var _animation=(visibilityAnimationConfig===null||visibilityAnimationConfig===void 0?void 0:(_visibilityAnimationC3=visibilityAnimationConfig.hide)===null||_visibilityAnimationC3===void 0?void 0:_visibilityAnimationC3.animation)==='spring'?Animated.spring:Animated.timing;_animation(visible,_objectSpread({toValue:0,useNativeDriver:useNativeDriver,duration:200},visibilityAnimationConfig===null||visibilityAnimationConfig===void 0?void 0:(_visibilityAnimationC4=visibilityAnimationConfig.hide)===null||_visibilityAnimationC4===void 0?void 0:_visibilityAnimationC4.config)).start();}},[visible,shouldShowTabBar]);var _React$useState5=React.useState({height:0,width:dimensions.width}),_React$useState6=_slicedToArray(_React$useState5,2),layout=_React$useState6[0],setLayout=_React$useState6[1];var handleLayout=function handleLayout(e){var _e$nativeEvent$layout=e.nativeEvent.layout,height=_e$nativeEvent$layout.height,width=_e$nativeEvent$layout.width;setLayout(function(layout){if(height===layout.height&&width===layout.width){return layout;}else{return{height:height,width:width};}});};var routes=state.routes;var shouldUseHorizontalLabels=function shouldUseHorizontalLabels(){if(labelPosition){return labelPosition==='beside-icon';}if(!adaptive){return false;}if(layout.width>=768){var maxTabItemWidth=DEFAULT_MAX_TAB_ITEM_WIDTH;var flattenedStyle=StyleSheet.flatten(tabStyle);if(flattenedStyle){if(typeof flattenedStyle.width==='number'){maxTabItemWidth=flattenedStyle.width;}else if(typeof flattenedStyle.maxWidth==='number'){maxTabItemWidth=flattenedStyle.maxWidth;}}return routes.length*maxTabItemWidth<=layout.width;}else{var isLandscape=dimensions.width>dimensions.height;return isLandscape;}};var defaultInsets=useSafeArea();var insets={top:(_safeAreaInsets$top=safeAreaInsets===null||safeAreaInsets===void 0?void 0:safeAreaInsets.top)!==null&&_safeAreaInsets$top!==void 0?_safeAreaInsets$top:defaultInsets.top,right:(_safeAreaInsets$right=safeAreaInsets===null||safeAreaInsets===void 0?void 0:safeAreaInsets.right)!==null&&_safeAreaInsets$right!==void 0?_safeAreaInsets$right:defaultInsets.right,bottom:(_safeAreaInsets$botto=safeAreaInsets===null||safeAreaInsets===void 0?void 0:safeAreaInsets.bottom)!==null&&_safeAreaInsets$botto!==void 0?_safeAreaInsets$botto:defaultInsets.bottom,left:(_safeAreaInsets$left=safeAreaInsets===null||safeAreaInsets===void 0?void 0:safeAreaInsets.left)!==null&&_safeAreaInsets$left!==void 0?_safeAreaInsets$left:defaultInsets.left};var paddingBottom=Math.max(insets.bottom-Platform.select({ios:4,default:0}),0);return React.createElement(Animated.View,{style:[styles.tabBar,{backgroundColor:colors.card,borderTopColor:colors.border},{transform:[{translateY:visible.interpolate({inputRange:[0,1],outputRange:[layout.height+paddingBottom,0]})}],position:isTabBarHidden?'absolute':null},{height:DEFAULT_TABBAR_HEIGHT+paddingBottom,paddingBottom:paddingBottom,paddingHorizontal:Math.max(insets.left,insets.right)},style],pointerEvents:isTabBarHidden?'none':'auto'},React.createElement(View,{style:styles.content,onLayout:handleLayout},routes.map(function(route,index){var focused=index===state.index;var options=descriptors[route.key].options;var onPress=function onPress(){var event=navigation.emit({type:'tabPress',target:route.key,canPreventDefault:true});if(!focused&&!event.defaultPrevented){navigation.dispatch(_objectSpread(_objectSpread({},CommonActions.navigate(route.name)),{},{target:state.key}));}};var onLongPress=function onLongPress(){navigation.emit({type:'tabLongPress',target:route.key});};var label=options.tabBarLabel!==undefined?options.tabBarLabel:options.title!==undefined?options.title:route.name;var accessibilityLabel=options.tabBarAccessibilityLabel!==undefined?options.tabBarAccessibilityLabel:typeof label==='string'?\"\".concat(label,\", tab, \").concat(index+1,\" of \").concat(routes.length):undefined;return React.createElement(NavigationContext.Provider,{key:route.key,value:descriptors[route.key].navigation},React.createElement(NavigationRouteContext.Provider,{value:route},React.createElement(BottomTabItem,{route:route,focused:focused,horizontal:shouldUseHorizontalLabels(),onPress:onPress,onLongPress:onLongPress,accessibilityLabel:accessibilityLabel,to:buildLink(route.name,route.params),testID:options.tabBarTestID,allowFontScaling:allowFontScaling,activeTintColor:activeTintColor,inactiveTintColor:inactiveTintColor,activeBackgroundColor:activeBackgroundColor,inactiveBackgroundColor:inactiveBackgroundColor,button:options.tabBarButton,icon:options.tabBarIcon,badge:options.tabBarBadge,label:label,showLabel:showLabel,labelStyle:labelStyle,iconStyle:iconStyle,style:tabStyle})));})));}var styles=StyleSheet.create({tabBar:{left:0,right:0,bottom:0,borderTopWidth:StyleSheet.hairlineWidth,elevation:8},content:{flex:1,flexDirection:'row'}});","map":{"version":3,"sources":["BottomTabBar.tsx"],"names":["DEFAULT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","useNativeDriver","Platform","adaptive","keyboardHidesTabBar","tabStyle","colors","useTheme","buildLink","useLinkBuilder","focusedRoute","state","focusedDescriptor","descriptors","focusedOptions","dimensions","useWindowDimensions","isKeyboardShown","useIsKeyboardShown","shouldShowTabBar","visibilityAnimationConfigRef","React","Animated","visibilityAnimationConfig","animation","toValue","duration","finished","setIsTabBarHidden","height","width","handleLayout","e","setLayout","layout","routes","shouldUseHorizontalLabels","labelPosition","maxTabItemWidth","flattenedStyle","StyleSheet","isLandscape","defaultInsets","useSafeArea","insets","top","safeAreaInsets","right","bottom","left","paddingBottom","ios","default","styles","backgroundColor","borderTopColor","border","transform","translateY","inputRange","outputRange","position","isTabBarHidden","paddingHorizontal","Math","focused","index","options","route","onPress","event","type","target","canPreventDefault","navigation","CommonActions","key","onLongPress","label","accessibilityLabel","tabBar","borderTopWidth","elevation","content","flex","flexDirection"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  View,\n  Animated,\n  StyleSheet,\n  Platform,\n  LayoutChangeEvent,\n} from 'react-native';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  CommonActions,\n  useTheme,\n  useLinkBuilder,\n} from '@react-navigation/native';\nimport { useSafeArea } from 'react-native-safe-area-context';\n\nimport BottomTabItem from './BottomTabItem';\nimport useWindowDimensions from '../utils/useWindowDimensions';\nimport useIsKeyboardShown from '../utils/useIsKeyboardShown';\nimport type { BottomTabBarProps } from '../types';\n\ntype Props = BottomTabBarProps & {\n  activeTintColor?: string;\n  inactiveTintColor?: string;\n};\n\nconst DEFAULT_TABBAR_HEIGHT = 49;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\nexport default function BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  activeBackgroundColor,\n  activeTintColor,\n  adaptive = true,\n  allowFontScaling,\n  inactiveBackgroundColor,\n  inactiveTintColor,\n  keyboardHidesTabBar = false,\n  labelPosition,\n  labelStyle,\n  iconStyle,\n  safeAreaInsets,\n  showLabel,\n  style,\n  tabStyle,\n}: Props) {\n  const { colors } = useTheme();\n  const buildLink = useLinkBuilder();\n\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n\n  const dimensions = useWindowDimensions();\n  const isKeyboardShown = useIsKeyboardShown();\n\n  const shouldShowTabBar =\n    focusedOptions.tabBarVisible !== false &&\n    !(keyboardHidesTabBar && isKeyboardShown);\n\n  const visibilityAnimationConfigRef = React.useRef(\n    focusedOptions.tabBarVisibilityAnimationConfig\n  );\n\n  React.useEffect(() => {\n    visibilityAnimationConfigRef.current =\n      focusedOptions.tabBarVisibilityAnimationConfig;\n  });\n\n  const [isTabBarHidden, setIsTabBarHidden] = React.useState(!shouldShowTabBar);\n\n  const [visible] = React.useState(\n    () => new Animated.Value(shouldShowTabBar ? 1 : 0)\n  );\n\n  React.useEffect(() => {\n    const visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n\n    if (shouldShowTabBar) {\n      const animation =\n        visibilityAnimationConfig?.show?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 1,\n        useNativeDriver,\n        duration: 250,\n        ...visibilityAnimationConfig?.show?.config,\n      }).start(({ finished }) => {\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      setIsTabBarHidden(true);\n\n      const animation =\n        visibilityAnimationConfig?.hide?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 0,\n        useNativeDriver,\n        duration: 200,\n        ...visibilityAnimationConfig?.hide?.config,\n      }).start();\n    }\n  }, [visible, shouldShowTabBar]);\n\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width,\n  });\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    setLayout((layout) => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width,\n        };\n      }\n    });\n  };\n\n  const { routes } = state;\n  const shouldUseHorizontalLabels = () => {\n    if (labelPosition) {\n      return labelPosition === 'beside-icon';\n    }\n\n    if (!adaptive) {\n      return false;\n    }\n\n    if (layout.width >= 768) {\n      // Screen size matches a tablet\n      let maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n      const flattenedStyle = StyleSheet.flatten(tabStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          maxTabItemWidth = flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          maxTabItemWidth = flattenedStyle.maxWidth;\n        }\n      }\n\n      return routes.length * maxTabItemWidth <= layout.width;\n    } else {\n      const isLandscape = dimensions.width > dimensions.height;\n\n      return isLandscape;\n    }\n  };\n\n  const defaultInsets = useSafeArea();\n\n  const insets = {\n    top: safeAreaInsets?.top ?? defaultInsets.top,\n    right: safeAreaInsets?.right ?? defaultInsets.right,\n    bottom: safeAreaInsets?.bottom ?? defaultInsets.bottom,\n    left: safeAreaInsets?.left ?? defaultInsets.left,\n  };\n\n  const paddingBottom = Math.max(\n    insets.bottom - Platform.select({ ios: 4, default: 0 }),\n    0\n  );\n\n  return (\n    <Animated.View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor: colors.card,\n          borderTopColor: colors.border,\n        },\n        {\n          transform: [\n            {\n              translateY: visible.interpolate({\n                inputRange: [0, 1],\n                outputRange: [layout.height + paddingBottom, 0],\n              }),\n            },\n          ],\n          // Absolutely position the tab bar so that the content is below it\n          // This is needed to avoid gap at bottom when the tab bar is hidden\n          position: isTabBarHidden ? 'absolute' : (null as any),\n        },\n        {\n          height: DEFAULT_TABBAR_HEIGHT + paddingBottom,\n          paddingBottom,\n          paddingHorizontal: Math.max(insets.left, insets.right),\n        },\n        style,\n      ]}\n      pointerEvents={isTabBarHidden ? 'none' : 'auto'}\n    >\n      <View style={styles.content} onLayout={handleLayout}>\n        {routes.map((route, index) => {\n          const focused = index === state.index;\n          const { options } = descriptors[route.key];\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!focused && !event.defaultPrevented) {\n              navigation.dispatch({\n                ...CommonActions.navigate(route.name),\n                target: state.key,\n              });\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: 'tabLongPress',\n              target: route.key,\n            });\n          };\n\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const accessibilityLabel =\n            options.tabBarAccessibilityLabel !== undefined\n              ? options.tabBarAccessibilityLabel\n              : typeof label === 'string'\n              ? `${label}, tab, ${index + 1} of ${routes.length}`\n              : undefined;\n\n          return (\n            <NavigationContext.Provider\n              key={route.key}\n              value={descriptors[route.key].navigation}\n            >\n              <NavigationRouteContext.Provider value={route}>\n                <BottomTabItem\n                  route={route}\n                  focused={focused}\n                  horizontal={shouldUseHorizontalLabels()}\n                  onPress={onPress}\n                  onLongPress={onLongPress}\n                  accessibilityLabel={accessibilityLabel}\n                  to={buildLink(route.name, route.params)}\n                  testID={options.tabBarTestID}\n                  allowFontScaling={allowFontScaling}\n                  activeTintColor={activeTintColor}\n                  inactiveTintColor={inactiveTintColor}\n                  activeBackgroundColor={activeBackgroundColor}\n                  inactiveBackgroundColor={inactiveBackgroundColor}\n                  button={options.tabBarButton}\n                  icon={options.tabBarIcon}\n                  badge={options.tabBarBadge}\n                  label={label}\n                  showLabel={showLabel}\n                  labelStyle={labelStyle}\n                  iconStyle={iconStyle}\n                  style={tabStyle}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          );\n        })}\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}