{"ast":null,"code":"import*as React from'react';export default function useChildListeners(){var _React$useRef=React.useRef({action:[],focus:[]}),listeners=_React$useRef.current;var addListener=React.useCallback(function(type,listener){listeners[type].push(listener);return function(){var index=listeners[type].indexOf(listener);listeners[type].splice(index,1);};},[listeners]);return{listeners:listeners,addListener:addListener};}","map":{"version":3,"sources":["useChildListeners.tsx"],"names":["current","listeners","action","focus","addListener","index"],"mappings":"AAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,CAMA,cAAe,SAAA,CAAA,iBAAA,EAA6B,mBACX,KAAK,CAAL,MAAA,CAI7B,CACAE,MAAM,CADN,EAAA,CAEAC,KAAK,CAAE,EAFP,CAJ6B,CADW,CACzBF,SADyB,eAClCD,OADkC,CAU1C,GAAMI,CAAAA,WAAW,CAAG,KAAK,CAAL,WAAA,CAClB,SAAA,IAAA,CAAA,QAAA,CAAoE,CAElEH,SAAS,CAATA,IAAS,CAATA,CAAAA,IAAAA,CAAAA,QAAAA,EAEA,MAAO,WAAM,CAEX,GAAMI,CAAAA,KAAK,CAAGJ,SAAS,CAATA,IAAS,CAATA,CAAAA,OAAAA,CAAd,QAAcA,CAAd,CAEAA,SAAS,CAATA,IAAS,CAATA,CAAAA,MAAAA,CAAAA,KAAAA,CAAAA,CAAAA,EAJF,CAAA,CALgB,CAAA,CAYlB,CAZF,SAYE,CAZkB,CAApB,CAeA,MAAO,CACLA,SADK,CACLA,SADK,CAELG,WAAAA,CAAAA,WAFK,CAAP,CAID","sourcesContent":["import * as React from 'react';\nimport type { ListenerMap } from './NavigationBuilderContext';\n\n/**\n * Hook which lets child navigators add action listeners.\n */\nexport default function useChildListeners() {\n  const { current: listeners } = React.useRef<\n    {\n      [K in keyof ListenerMap]: ListenerMap[K][];\n    }\n  >({\n    action: [],\n    focus: [],\n  });\n\n  const addListener = React.useCallback(\n    <T extends keyof ListenerMap>(type: T, listener: ListenerMap[T]) => {\n      // @ts-expect-error: listener should be correct type according to `type`\n      listeners[type].push(listener);\n\n      return () => {\n        // @ts-expect-error: listener should be correct type according to `type`\n        const index = listeners[type].indexOf(listener);\n\n        listeners[type].splice(index, 1);\n      };\n    },\n    [listeners]\n  );\n\n  return {\n    listeners,\n    addListener,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}