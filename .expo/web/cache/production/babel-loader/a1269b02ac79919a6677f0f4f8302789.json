{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import{nanoid}from'nanoid/non-secure';import TabRouter,{TabActions}from\"./TabRouter\";export var DrawerActions=_objectSpread(_objectSpread({},TabActions),{},{openDrawer:function openDrawer(){return{type:'OPEN_DRAWER'};},closeDrawer:function closeDrawer(){return{type:'CLOSE_DRAWER'};},toggleDrawer:function toggleDrawer(){return{type:'TOGGLE_DRAWER'};}});var isDrawerOpen=function isDrawerOpen(state){var _state$history;return Boolean((_state$history=state.history)===null||_state$history===void 0?void 0:_state$history.find(function(it){return it.type==='drawer';}));};var openDrawer=function openDrawer(state){if(isDrawerOpen(state)){return state;}return _objectSpread(_objectSpread({},state),{},{history:[].concat(_toConsumableArray(state.history),[{type:'drawer'}])});};var closeDrawer=function closeDrawer(state){if(!isDrawerOpen(state)){return state;}return _objectSpread(_objectSpread({},state),{},{history:state.history.filter(function(it){return it.type!=='drawer';})});};export default function DrawerRouter(_ref){var openByDefault=_ref.openByDefault,rest=_objectWithoutProperties(_ref,[\"openByDefault\"]);var router=TabRouter(rest);return _objectSpread(_objectSpread({},router),{},{type:'drawer',getInitialState:function getInitialState(_ref2){var routeNames=_ref2.routeNames,routeParamList=_ref2.routeParamList;var state=router.getInitialState({routeNames:routeNames,routeParamList:routeParamList});if(openByDefault){state=openDrawer(state);}return _objectSpread(_objectSpread({},state),{},{stale:false,type:'drawer',key:\"drawer-\".concat(nanoid())});},getRehydratedState:function getRehydratedState(partialState,_ref3){var routeNames=_ref3.routeNames,routeParamList=_ref3.routeParamList;if(partialState.stale===false){return partialState;}var state=router.getRehydratedState(partialState,{routeNames:routeNames,routeParamList:routeParamList});if(isDrawerOpen(partialState)){state=openDrawer(state);}return _objectSpread(_objectSpread({},state),{},{type:'drawer',key:\"drawer-\".concat(nanoid())});},getStateForRouteFocus:function getStateForRouteFocus(state,key){var result=router.getStateForRouteFocus(state,key);if(openByDefault){return openDrawer(result);}return closeDrawer(result);},getStateForAction:function getStateForAction(state,action,options){switch(action.type){case'OPEN_DRAWER':return openDrawer(state);case'CLOSE_DRAWER':return closeDrawer(state);case'TOGGLE_DRAWER':if(isDrawerOpen(state)){return closeDrawer(state);}return openDrawer(state);case'GO_BACK':if(openByDefault){if(!isDrawerOpen(state)){return openDrawer(state);}}else{if(isDrawerOpen(state)){return closeDrawer(state);}}return router.getStateForAction(state,action,options);default:return router.getStateForAction(state,action,options);}},actionCreators:DrawerActions});}","map":{"version":3,"sources":["DrawerRouter.tsx"],"names":["DrawerActions","openDrawer","type","closeDrawer","toggleDrawer","isDrawerOpen","state","Boolean","it","history","openByDefault","rest","router","TabRouter","getInitialState","routeParamList","routeNames","stale","key","nanoid","getRehydratedState","partialState","getStateForRouteFocus","result","getStateForAction","action","actionCreators"],"mappings":"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","sourcesContent":["import { nanoid } from 'nanoid/non-secure';\nimport type {\n  PartialState,\n  CommonNavigationAction,\n  Router,\n  ParamListBase,\n} from './types';\nimport TabRouter, {\n  TabActions,\n  TabActionType,\n  TabRouterOptions,\n  TabNavigationState,\n  TabActionHelpers,\n} from './TabRouter';\n\nexport type DrawerActionType =\n  | TabActionType\n  | {\n      type: 'OPEN_DRAWER' | 'CLOSE_DRAWER' | 'TOGGLE_DRAWER';\n      source?: string;\n      target?: string;\n    };\n\nexport type DrawerRouterOptions = TabRouterOptions & {\n  openByDefault?: boolean;\n};\n\nexport type DrawerNavigationState = Omit<\n  TabNavigationState,\n  'type' | 'history'\n> & {\n  /**\n   * Type of the router, in this case, it's drawer.\n   */\n  type: 'drawer';\n  /**\n   * List of previously visited route keys and drawer open status.\n   */\n  history: ({ type: 'route'; key: string } | { type: 'drawer' })[];\n};\n\nexport type DrawerActionHelpers<\n  ParamList extends ParamListBase\n> = TabActionHelpers<ParamList> & {\n  /**\n   * Open the drawer sidebar.\n   */\n  openDrawer(): void;\n\n  /**\n   * Close the drawer sidebar.\n   */\n  closeDrawer(): void;\n\n  /**\n   * Open the drawer sidebar if closed, or close if opened.\n   */\n  toggleDrawer(): void;\n};\n\nexport const DrawerActions = {\n  ...TabActions,\n  openDrawer(): DrawerActionType {\n    return { type: 'OPEN_DRAWER' };\n  },\n  closeDrawer(): DrawerActionType {\n    return { type: 'CLOSE_DRAWER' };\n  },\n  toggleDrawer(): DrawerActionType {\n    return { type: 'TOGGLE_DRAWER' };\n  },\n};\n\nconst isDrawerOpen = (\n  state: DrawerNavigationState | PartialState<DrawerNavigationState>\n) => Boolean(state.history?.find((it) => it.type === 'drawer'));\n\nconst openDrawer = (state: DrawerNavigationState): DrawerNavigationState => {\n  if (isDrawerOpen(state)) {\n    return state;\n  }\n\n  return {\n    ...state,\n    history: [...state.history, { type: 'drawer' }],\n  };\n};\n\nconst closeDrawer = (state: DrawerNavigationState): DrawerNavigationState => {\n  if (!isDrawerOpen(state)) {\n    return state;\n  }\n\n  return {\n    ...state,\n    history: state.history.filter((it) => it.type !== 'drawer'),\n  };\n};\n\nexport default function DrawerRouter({\n  openByDefault,\n  ...rest\n}: DrawerRouterOptions): Router<\n  DrawerNavigationState,\n  DrawerActionType | CommonNavigationAction\n> {\n  const router = (TabRouter(rest) as unknown) as Router<\n    DrawerNavigationState,\n    TabActionType | CommonNavigationAction\n  >;\n\n  return {\n    ...router,\n\n    type: 'drawer',\n\n    getInitialState({ routeNames, routeParamList }) {\n      let state = router.getInitialState({ routeNames, routeParamList });\n\n      if (openByDefault) {\n        state = openDrawer(state);\n      }\n\n      return {\n        ...state,\n        stale: false,\n        type: 'drawer',\n        key: `drawer-${nanoid()}`,\n      };\n    },\n\n    getRehydratedState(partialState, { routeNames, routeParamList }) {\n      if (partialState.stale === false) {\n        return partialState;\n      }\n\n      let state = router.getRehydratedState(partialState, {\n        routeNames,\n        routeParamList,\n      });\n\n      if (isDrawerOpen(partialState)) {\n        state = openDrawer(state);\n      }\n\n      return {\n        ...state,\n        type: 'drawer',\n        key: `drawer-${nanoid()}`,\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const result = router.getStateForRouteFocus(state, key);\n\n      if (openByDefault) {\n        return openDrawer(result);\n      }\n\n      return closeDrawer(result);\n    },\n\n    getStateForAction(state, action, options) {\n      switch (action.type) {\n        case 'OPEN_DRAWER':\n          return openDrawer(state);\n\n        case 'CLOSE_DRAWER':\n          return closeDrawer(state);\n\n        case 'TOGGLE_DRAWER':\n          if (isDrawerOpen(state)) {\n            return closeDrawer(state);\n          }\n\n          return openDrawer(state);\n\n        case 'GO_BACK':\n          if (openByDefault) {\n            if (!isDrawerOpen(state)) {\n              return openDrawer(state);\n            }\n          } else {\n            if (isDrawerOpen(state)) {\n              return closeDrawer(state);\n            }\n          }\n\n          return router.getStateForAction(state, action, options);\n\n        default:\n          return router.getStateForAction(state, action, options);\n      }\n    },\n\n    actionCreators: DrawerActions,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}