{"ast":null,"code":"export default function debounce(func,duration){var timeout;return function(){if(!timeout){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}func.apply(this,args);timeout=setTimeout(function(){timeout=undefined;},duration);}};}","map":{"version":3,"sources":["debounce.tsx"],"names":["func","timeout","setTimeout"],"mappings":"AAAA,cAAe,SAAA,CAAA,QAAA,CAAA,IAAA,CAAA,QAAA,CAGV,CACH,GAAA,CAAA,OAAA,CAEA,MAAO,WAA8B,CACnC,GAAI,CAAJ,OAAA,CAAc,+BADT,IACS,0CADT,IACS,wBAEZA,IAAI,CAAJA,KAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAEAC,OAAO,CAAGC,UAAU,CAAC,UAAM,CACzBD,OAAO,CAAPA,SAAAA,CADkB,CAAA,CAApBA,QAAoB,CAApBA,CAGD,CARH,CAAA,CAUD","sourcesContent":["export default function debounce<T extends (...args: any[]) => void>(\n  func: T,\n  duration: number\n): T {\n  let timeout: NodeJS.Timeout | number | undefined;\n\n  return function (this: any, ...args) {\n    if (!timeout) {\n      // eslint-disable-next-line babel/no-invalid-this\n      func.apply(this, args);\n\n      timeout = setTimeout(() => {\n        timeout = undefined;\n      }, duration);\n    }\n  } as T;\n}\n"]},"metadata":{},"sourceType":"module"}