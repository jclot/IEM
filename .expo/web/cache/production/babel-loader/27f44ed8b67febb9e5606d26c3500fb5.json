{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import color from'color';import{useTheme}from'@react-navigation/native';export default function Badge(_ref){var _ref$visible=_ref.visible,visible=_ref$visible===void 0?true:_ref$visible,_ref$size=_ref.size,size=_ref$size===void 0?18:_ref$size,children=_ref.children,style=_ref.style,rest=_objectWithoutProperties(_ref,[\"visible\",\"size\",\"children\",\"style\"]);var _React$useState=React.useState(function(){return new Animated.Value(visible?1:0);}),_React$useState2=_slicedToArray(_React$useState,1),opacity=_React$useState2[0];var _React$useState3=React.useState(visible?true:false),_React$useState4=_slicedToArray(_React$useState3,2),rendered=_React$useState4[0],setRendered=_React$useState4[1];var theme=useTheme();React.useEffect(function(){if(!rendered){return;}Animated.timing(opacity,{toValue:visible?1:0,duration:150,useNativeDriver:true}).start(function(_ref3){var finished=_ref3.finished;if(finished&&!visible){setRendered(false);}});},[opacity,rendered,visible]);if(visible&&!rendered){setRendered(true);}if(!visible&&!rendered){return null;}var _ref2=StyleSheet.flatten(style)||{},_ref2$backgroundColor=_ref2.backgroundColor,backgroundColor=_ref2$backgroundColor===void 0?theme.colors.notification:_ref2$backgroundColor,restStyle=_objectWithoutProperties(_ref2,[\"backgroundColor\"]);var textColor=color(backgroundColor).isLight()?'black':'white';var borderRadius=size/2;var fontSize=Math.floor(size*3/4);return React.createElement(Animated.Text,_extends({numberOfLines:1,style:[{opacity:opacity,transform:[{scale:opacity.interpolate({inputRange:[0,1],outputRange:[0.5,1]})}],backgroundColor:backgroundColor,color:textColor,fontSize:fontSize,lineHeight:size-1,height:size,minWidth:size,borderRadius:borderRadius},styles.container,restStyle]},rest),children);}var styles=StyleSheet.create({container:{alignSelf:'flex-end',textAlign:'center',paddingHorizontal:4,overflow:'hidden'}});","map":{"version":3,"sources":["Badge.tsx"],"names":["visible","size","style","rest","React","Animated","theme","useTheme","toValue","duration","useNativeDriver","finished","setRendered","backgroundColor","notification","StyleSheet","textColor","color","borderRadius","fontSize","Math","opacity","transform","scale","inputRange","outputRange","lineHeight","height","minWidth","styles","container","alignSelf","textAlign","paddingHorizontal","overflow"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, StyleProp, TextStyle } from 'react-native';\nimport color from 'color';\nimport { useTheme } from '@react-navigation/native';\n\ntype Props = {\n  /**\n   * Whether the badge is visible\n   */\n  visible: boolean;\n  /**\n   * Content of the `Badge`.\n   */\n  children?: string | number;\n  /**\n   * Size of the `Badge`.\n   */\n  size?: number;\n  /**\n   * Style object for the tab bar container.\n   */\n  style?: Animated.WithAnimatedValue<StyleProp<TextStyle>>;\n};\n\nexport default function Badge({\n  visible = true,\n  size = 18,\n  children,\n  style,\n  ...rest\n}: Props) {\n  const [opacity] = React.useState(() => new Animated.Value(visible ? 1 : 0));\n  const [rendered, setRendered] = React.useState(visible ? true : false);\n\n  const theme = useTheme();\n\n  React.useEffect(() => {\n    if (!rendered) {\n      return;\n    }\n\n    Animated.timing(opacity, {\n      toValue: visible ? 1 : 0,\n      duration: 150,\n      useNativeDriver: true,\n    }).start(({ finished }) => {\n      if (finished && !visible) {\n        setRendered(false);\n      }\n    });\n  }, [opacity, rendered, visible]);\n\n  if (visible && !rendered) {\n    setRendered(true);\n  }\n\n  if (!visible && !rendered) {\n    return null;\n  }\n\n  // @ts-expect-error: backgroundColor definitely exists\n  const { backgroundColor = theme.colors.notification, ...restStyle } =\n    StyleSheet.flatten(style) || {};\n  const textColor = color(backgroundColor).isLight() ? 'black' : 'white';\n\n  const borderRadius = size / 2;\n  const fontSize = Math.floor((size * 3) / 4);\n\n  return (\n    <Animated.Text\n      numberOfLines={1}\n      style={[\n        {\n          opacity,\n          transform: [\n            {\n              scale: opacity.interpolate({\n                inputRange: [0, 1],\n                outputRange: [0.5, 1],\n              }),\n            },\n          ],\n          backgroundColor,\n          color: textColor,\n          fontSize,\n          lineHeight: size - 1,\n          height: size,\n          minWidth: size,\n          borderRadius,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      {children}\n    </Animated.Text>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignSelf: 'flex-end',\n    textAlign: 'center',\n    paddingHorizontal: 4,\n    overflow: 'hidden',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}