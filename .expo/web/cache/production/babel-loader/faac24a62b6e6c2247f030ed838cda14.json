{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import View from\"react-native-web/dist/exports/View\";import Platform from\"react-native-web/dist/exports/Platform\";var Screens;try{Screens=require('react-native-screens');}catch(e){}var WebScreen=function(_React$Component){_inherits(WebScreen,_React$Component);var _super=_createSuper(WebScreen);function WebScreen(){_classCallCheck(this,WebScreen);return _super.apply(this,arguments);}_createClass(WebScreen,[{key:\"render\",value:function render(){var _this$props=this.props,active=_this$props.active,style=_this$props.style,rest=_objectWithoutProperties(_this$props,[\"active\",\"style\"]);return React.createElement(View,_extends({hidden:!active,style:[style,{display:active?'flex':'none'}]},rest));}}]);return WebScreen;}(React.Component);var AnimatedWebScreen=Animated.createAnimatedComponent(WebScreen);export var MaybeScreenContainer=function MaybeScreenContainer(_ref){var enabled=_ref.enabled,rest=_objectWithoutProperties(_ref,[\"enabled\"]);if(enabled&&Platform.OS!=='web'&&Screens&&Screens.screensEnabled()){return React.createElement(Screens.ScreenContainer,rest);}return React.createElement(View,rest);};export var MaybeScreen=function MaybeScreen(_ref2){var enabled=_ref2.enabled,active=_ref2.active,rest=_objectWithoutProperties(_ref2,[\"enabled\",\"active\"]);if(enabled&&Platform.OS==='web'){return React.createElement(AnimatedWebScreen,_extends({active:active},rest));}if(enabled&&Screens&&Screens.screensEnabled()){return React.createElement(Screens.Screen,_extends({active:active},rest));}return React.createElement(View,rest);};","map":{"version":3,"sources":["Screens.tsx"],"names":["Screens","require","React","style","display","active","AnimatedWebScreen","Animated","MaybeScreenContainer","enabled","rest","Platform","MaybeScreen"],"mappings":"+9DAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,+KAGA,GAAA,CAAA,OAAA,CAEA,GAAI,CACFA,OAAO,CAAGC,OAAO,CAAjBD,sBAAiB,CAAjBA,CADF,CAEE,MAAA,CAAA,CAAU,CAAV,C,GAOF,CAAA,S,4PAMW,CACP,GAAA,CAAA,WAAA,CAAmC,KAAnC,KAAA,CAAM,MAAN,CAAA,WAAA,CAAM,MAAN,CAAgBG,KAAhB,CAAA,WAAA,CAAgBA,KAAhB,CAAA,IAAA,CAAA,wBAAA,CAAA,WAAA,CAAA,CAAA,QAAA,CAAA,OAAA,CAAA,CAAA,CAEA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAEE,MAAM,CAAE,CAFV,MAAA,CAGE,KAAK,CAAE,CAAA,KAAA,CAAQ,CAAEC,OAAO,CAAEC,MAAM,CAAA,MAAA,CAAY,MAA7B,CAAR,CAHT,CAAA,CADF,IACE,CAAA,CADF,CAQD,C,uBAjBqBH,KAAK,CAA7B,S,EAoBA,GAAMI,CAAAA,iBAAiB,CAAGC,QAAQ,CAARA,uBAAAA,CAA1B,SAA0BA,CAA1B,CAEA,MAAO,IAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAAA,IAAA,CAM9B,CAN+B,GACnCC,CAAAA,OADmC,CAM/B,IAN+B,CACnCA,OADmC,CAEhCC,IAFgC,CAM/B,wBAAA,CAAA,IAAA,CAAA,CAAA,SAAA,CAAA,CAN+B,CAOnC,GAAID,OAAO,EAAIE,QAAQ,CAARA,EAAAA,GAAXF,KAAAA,EAAAA,OAAAA,EAA+CT,OAAO,CAA1D,cAAmDA,EAAnD,CAA6E,CAC3E,MAAO,CAAA,KAAA,CAAA,aAAA,CAAC,OAAD,CAAA,eAAA,CAAP,IAAO,CAAP,CACD,CAED,MAAO,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAP,IAAO,CAAP,CAXK,CAAA,CAcP,MAAO,IAAMY,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAA,KAAA,CAQrB,IARsB,CAAA,OAQtB,CAAA,KAAA,CARsB,OAQtB,CANJP,MAMI,CAAA,KAAA,CANJA,MAMI,CALDK,IAKC,CAAA,wBAAA,CAAA,KAAA,CAAA,CAAA,SAAA,CAAA,QAAA,CAAA,CAAA,CACJ,GAAID,OAAO,EAAIE,QAAQ,CAARA,EAAAA,GAAf,KAAA,CAAsC,CACpC,MAAO,CAAA,KAAA,CAAA,aAAA,CAAA,iBAAA,CAAA,QAAA,CAAA,CAAmB,MAAM,CAAEN,MAA3B,CAAA,CAAP,IAAO,CAAA,CAAP,CACD,CAED,GAAII,OAAO,EAAPA,OAAAA,EAAsBT,OAAO,CAAjC,cAA0BA,EAA1B,CAAoD,CAElD,MAAO,CAAA,KAAA,CAAA,aAAA,CAAC,OAAD,CAAA,MAAA,CAAA,QAAA,CAAA,CAAgB,MAAM,CAAEK,MAAxB,CAAA,CAAP,IAAO,CAAA,CAAP,CACD,CAED,MAAO,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAP,IAAO,CAAP,CAlBK,CAAA","sourcesContent":["import * as React from 'react';\nimport { Animated, View, Platform, ViewProps } from 'react-native';\n\nlet Screens: typeof import('react-native-screens') | undefined;\n\ntry {\n  Screens = require('react-native-screens');\n} catch (e) {\n  // Ignore\n}\n\n// The web implementation in react-native-screens seems buggy.\n// The view doesn't become visible after coming back in some cases.\n// So we use our custom implementation.\nclass WebScreen extends React.Component<\n  ViewProps & {\n    active: number;\n    children: React.ReactNode;\n  }\n> {\n  render() {\n    const { active, style, ...rest } = this.props;\n\n    return (\n      <View\n        // @ts-expect-error: hidden exists on web, but not in React Native\n        hidden={!active}\n        style={[style, { display: active ? 'flex' : 'none' }]}\n        {...rest}\n      />\n    );\n  }\n}\n\nconst AnimatedWebScreen = Animated.createAnimatedComponent(WebScreen);\n\nexport const MaybeScreenContainer = ({\n  enabled,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  children: React.ReactNode;\n}) => {\n  if (enabled && Platform.OS !== 'web' && Screens && Screens.screensEnabled()) {\n    return <Screens.ScreenContainer {...rest} />;\n  }\n\n  return <View {...rest} />;\n};\n\nexport const MaybeScreen = ({\n  enabled,\n  active,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  active: 0 | 1 | Animated.AnimatedInterpolation;\n  children: React.ReactNode;\n}) => {\n  if (enabled && Platform.OS === 'web') {\n    return <AnimatedWebScreen active={active} {...rest} />;\n  }\n\n  if (enabled && Screens && Screens.screensEnabled()) {\n    // @ts-expect-error: stackPresentation is incorrectly marked as required\n    return <Screens.Screen active={active} {...rest} />;\n  }\n\n  return <View {...rest} />;\n};\n"]},"metadata":{},"sourceType":"module"}