{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Platform from\"react-native-web/dist/exports/Platform\";import InteractionManager from\"react-native-web/dist/exports/InteractionManager\";import Color from'color';import CardSheet from\"./CardSheet\";import{PanGestureHandler,GestureState}from\"../GestureHandler\";import CardAnimationContext from\"../../utils/CardAnimationContext\";import getDistanceForDirection from\"../../utils/getDistanceForDirection\";import getInvertedMultiplier from\"../../utils/getInvertedMultiplier\";import memoize from\"../../utils/memoize\";var GESTURE_VELOCITY_IMPACT=0.3;var TRUE=1;var FALSE=0;var GESTURE_RESPONSE_DISTANCE_HORIZONTAL=50;var GESTURE_RESPONSE_DISTANCE_VERTICAL=135;var useNativeDriver=Platform.OS!=='web';var Card=function(_React$Component){_inherits(Card,_React$Component);var _super=_createSuper(Card);function Card(){var _this;_classCallCheck(this,Card);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_defineProperty(_assertThisInitialized(_this),\"isCurrentlyMounted\",false);_defineProperty(_assertThisInitialized(_this),\"isClosing\",new Animated.Value(FALSE));_defineProperty(_assertThisInitialized(_this),\"inverted\",new Animated.Value(getInvertedMultiplier(_this.props.gestureDirection)));_defineProperty(_assertThisInitialized(_this),\"layout\",{width:new Animated.Value(_this.props.layout.width),height:new Animated.Value(_this.props.layout.height)});_defineProperty(_assertThisInitialized(_this),\"isSwiping\",new Animated.Value(FALSE));_defineProperty(_assertThisInitialized(_this),\"interactionHandle\",void 0);_defineProperty(_assertThisInitialized(_this),\"pendingGestureCallback\",void 0);_defineProperty(_assertThisInitialized(_this),\"lastToValue\",void 0);_defineProperty(_assertThisInitialized(_this),\"animate\",function(_ref){var closing=_ref.closing,velocity=_ref.velocity;var _this$props2=_this.props,gesture=_this$props2.gesture,transitionSpec=_this$props2.transitionSpec,onOpen=_this$props2.onOpen,onClose=_this$props2.onClose,onTransitionStart=_this$props2.onTransitionStart;var toValue=_this.getAnimateToValue(_objectSpread(_objectSpread({},_this.props),{},{closing:closing}));_this.lastToValue=toValue;var spec=closing?transitionSpec.close:transitionSpec.open;var animation=spec.animation==='spring'?Animated.spring:Animated.timing;_this.setPointerEventsEnabled(!closing);_this.handleStartInteraction();clearTimeout(_this.pendingGestureCallback);onTransitionStart===null||onTransitionStart===void 0?void 0:onTransitionStart({closing:closing});animation(gesture,_objectSpread(_objectSpread({},spec.config),{},{velocity:velocity,toValue:toValue,useNativeDriver:useNativeDriver,isInteraction:false})).start(function(_ref2){var finished=_ref2.finished;_this.handleEndInteraction();clearTimeout(_this.pendingGestureCallback);if(finished){if(closing){onClose();}else{onOpen();}if(_this.isCurrentlyMounted){_this.forceUpdate();}}});});_defineProperty(_assertThisInitialized(_this),\"getAnimateToValue\",function(_ref3){var closing=_ref3.closing,layout=_ref3.layout,gestureDirection=_ref3.gestureDirection;if(!closing){return 0;}return getDistanceForDirection(layout,gestureDirection);});_defineProperty(_assertThisInitialized(_this),\"setPointerEventsEnabled\",function(enabled){var _this$contentRef$curr;var pointerEvents=enabled?'box-none':'none';(_this$contentRef$curr=_this.contentRef.current)===null||_this$contentRef$curr===void 0?void 0:_this$contentRef$curr.setNativeProps({pointerEvents:pointerEvents});});_defineProperty(_assertThisInitialized(_this),\"handleStartInteraction\",function(){if(_this.interactionHandle===undefined){_this.interactionHandle=InteractionManager.createInteractionHandle();}});_defineProperty(_assertThisInitialized(_this),\"handleEndInteraction\",function(){if(_this.interactionHandle!==undefined){InteractionManager.clearInteractionHandle(_this.interactionHandle);_this.interactionHandle=undefined;}});_defineProperty(_assertThisInitialized(_this),\"handleGestureStateChange\",function(_ref4){var nativeEvent=_ref4.nativeEvent;var _this$props3=_this.props,layout=_this$props3.layout,onClose=_this$props3.onClose,onGestureBegin=_this$props3.onGestureBegin,onGestureCanceled=_this$props3.onGestureCanceled,onGestureEnd=_this$props3.onGestureEnd,gestureDirection=_this$props3.gestureDirection,gestureVelocityImpact=_this$props3.gestureVelocityImpact;switch(nativeEvent.state){case GestureState.BEGAN:_this.isSwiping.setValue(TRUE);_this.handleStartInteraction();onGestureBegin===null||onGestureBegin===void 0?void 0:onGestureBegin();break;case GestureState.CANCELLED:{_this.isSwiping.setValue(FALSE);_this.handleEndInteraction();var velocity=gestureDirection==='vertical'||gestureDirection==='vertical-inverted'?nativeEvent.velocityY:nativeEvent.velocityX;_this.animate({closing:_this.props.closing,velocity:velocity});onGestureCanceled===null||onGestureCanceled===void 0?void 0:onGestureCanceled();break;}case GestureState.END:{_this.isSwiping.setValue(FALSE);var distance;var translation;var _velocity;if(gestureDirection==='vertical'||gestureDirection==='vertical-inverted'){distance=layout.height;translation=nativeEvent.translationY;_velocity=nativeEvent.velocityY;}else{distance=layout.width;translation=nativeEvent.translationX;_velocity=nativeEvent.velocityX;}var closing=(translation+_velocity*gestureVelocityImpact)*getInvertedMultiplier(gestureDirection)>distance/2?_velocity!==0||translation!==0:_this.props.closing;_this.animate({closing:closing,velocity:_velocity});if(closing){_this.pendingGestureCallback=setTimeout(function(){onClose();_this.forceUpdate();},32);}onGestureEnd===null||onGestureEnd===void 0?void 0:onGestureEnd();break;}}});_defineProperty(_assertThisInitialized(_this),\"getInterpolatedStyle\",memoize(function(styleInterpolator,index,current,next,layout,insetTop,insetRight,insetBottom,insetLeft){return styleInterpolator({index:index,current:{progress:current},next:next&&{progress:next},closing:_this.isClosing,swiping:_this.isSwiping,inverted:_this.inverted,layouts:{screen:layout},insets:{top:insetTop,right:insetRight,bottom:insetBottom,left:insetLeft}});}));_defineProperty(_assertThisInitialized(_this),\"getCardAnimationContext\",memoize(function(index,current,next,layout,insetTop,insetRight,insetBottom,insetLeft){return{index:index,current:{progress:current},next:next&&{progress:next},closing:_this.isClosing,swiping:_this.isSwiping,inverted:_this.inverted,layouts:{screen:layout},insets:{top:insetTop,right:insetRight,bottom:insetBottom,left:insetLeft}};}));_defineProperty(_assertThisInitialized(_this),\"contentRef\",React.createRef());return _this;}_createClass(Card,[{key:\"componentDidMount\",value:function componentDidMount(){this.animate({closing:this.props.closing});this.isCurrentlyMounted=true;}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var _this$props4=this.props,layout=_this$props4.layout,gestureDirection=_this$props4.gestureDirection,closing=_this$props4.closing;var width=layout.width,height=layout.height;if(width!==prevProps.layout.width){this.layout.width.setValue(width);}if(height!==prevProps.layout.height){this.layout.height.setValue(height);}if(gestureDirection!==prevProps.gestureDirection){this.inverted.setValue(getInvertedMultiplier(gestureDirection));}var toValue=this.getAnimateToValue(this.props);if(this.getAnimateToValue(prevProps)!==toValue||this.lastToValue!==toValue){this.animate({closing:closing});}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.isCurrentlyMounted=false;this.handleEndInteraction();}},{key:\"gestureActivationCriteria\",value:function gestureActivationCriteria(){var _this$props5=this.props,layout=_this$props5.layout,gestureDirection=_this$props5.gestureDirection,gestureResponseDistance=_this$props5.gestureResponseDistance;var distance=gestureDirection==='vertical'||gestureDirection==='vertical-inverted'?(gestureResponseDistance===null||gestureResponseDistance===void 0?void 0:gestureResponseDistance.vertical)!==undefined?gestureResponseDistance.vertical:GESTURE_RESPONSE_DISTANCE_VERTICAL:(gestureResponseDistance===null||gestureResponseDistance===void 0?void 0:gestureResponseDistance.horizontal)!==undefined?gestureResponseDistance.horizontal:GESTURE_RESPONSE_DISTANCE_HORIZONTAL;if(gestureDirection==='vertical'){return{maxDeltaX:15,minOffsetY:5,hitSlop:{bottom:-layout.height+distance}};}else if(gestureDirection==='vertical-inverted'){return{maxDeltaX:15,minOffsetY:-5,hitSlop:{top:-layout.height+distance}};}else{var hitSlop=-layout.width+distance;var invertedMultiplier=getInvertedMultiplier(gestureDirection);if(invertedMultiplier===1){return{minOffsetX:5,maxDeltaY:20,hitSlop:{right:hitSlop}};}else{return{minOffsetX:-5,maxDeltaY:20,hitSlop:{left:hitSlop}};}}}},{key:\"render\",value:function render(){var _this$props=this.props,styleInterpolator=_this$props.styleInterpolator,index=_this$props.index,current=_this$props.current,gesture=_this$props.gesture,next=_this$props.next,layout=_this$props.layout,insets=_this$props.insets,overlay=_this$props.overlay,overlayEnabled=_this$props.overlayEnabled,shadowEnabled=_this$props.shadowEnabled,gestureEnabled=_this$props.gestureEnabled,gestureDirection=_this$props.gestureDirection,pageOverflowEnabled=_this$props.pageOverflowEnabled,children=_this$props.children,customContainerStyle=_this$props.containerStyle,contentStyle=_this$props.contentStyle,rest=_objectWithoutProperties(_this$props,[\"styleInterpolator\",\"index\",\"current\",\"gesture\",\"next\",\"layout\",\"insets\",\"overlay\",\"overlayEnabled\",\"shadowEnabled\",\"gestureEnabled\",\"gestureDirection\",\"pageOverflowEnabled\",\"children\",\"containerStyle\",\"contentStyle\"]);var interpolatedStyle=this.getInterpolatedStyle(styleInterpolator,index,current,next,layout,insets.top,insets.right,insets.bottom,insets.left);var animationContext=this.getCardAnimationContext(index,current,next,layout,insets.top,insets.right,insets.bottom,insets.left);var containerStyle=interpolatedStyle.containerStyle,cardStyle=interpolatedStyle.cardStyle,overlayStyle=interpolatedStyle.overlayStyle,shadowStyle=interpolatedStyle.shadowStyle;var handleGestureEvent=gestureEnabled?Animated.event([{nativeEvent:gestureDirection==='vertical'||gestureDirection==='vertical-inverted'?{translationY:gesture}:{translationX:gesture}}],{useNativeDriver:useNativeDriver}):undefined;var _StyleSheet$flatten=StyleSheet.flatten(contentStyle||{}),backgroundColor=_StyleSheet$flatten.backgroundColor;var isTransparent=typeof backgroundColor==='string'?Color(backgroundColor).alpha()===0:false;return React.createElement(CardAnimationContext.Provider,{value:animationContext},React.createElement(Animated.View,{style:{opacity:current},collapsable:false}),React.createElement(View,_extends({pointerEvents:\"box-none\"},rest),overlayEnabled?React.createElement(View,{pointerEvents:\"box-none\",style:StyleSheet.absoluteFill},overlay({style:overlayStyle})):null,React.createElement(Animated.View,{style:[styles.container,containerStyle,customContainerStyle],pointerEvents:\"box-none\"},React.createElement(PanGestureHandler,_extends({enabled:layout.width!==0&&gestureEnabled,onGestureEvent:handleGestureEvent,onHandlerStateChange:this.handleGestureStateChange},this.gestureActivationCriteria()),React.createElement(Animated.View,{style:[styles.container,cardStyle]},shadowEnabled&&shadowStyle&&!isTransparent?React.createElement(Animated.View,{style:[styles.shadow,gestureDirection==='horizontal'?[styles.shadowHorizontal,styles.shadowLeft]:gestureDirection==='horizontal-inverted'?[styles.shadowHorizontal,styles.shadowRight]:gestureDirection==='vertical'?[styles.shadowVertical,styles.shadowTop]:[styles.shadowVertical,styles.shadowBottom],{backgroundColor:backgroundColor},shadowStyle],pointerEvents:\"none\"}):null,React.createElement(CardSheet,{ref:this.contentRef,enabled:pageOverflowEnabled,layout:layout,style:contentStyle},children))))));}}]);return Card;}(React.Component);export{Card as default};_defineProperty(Card,\"defaultProps\",{overlayEnabled:Platform.OS!=='ios',shadowEnabled:true,gestureEnabled:true,gestureVelocityImpact:GESTURE_VELOCITY_IMPACT,overlay:function overlay(_ref5){var style=_ref5.style;return style?React.createElement(Animated.View,{pointerEvents:\"none\",style:[styles.overlay,style]}):null;}});var styles=StyleSheet.create({container:{flex:1},overlay:{flex:1,backgroundColor:'#000'},shadow:{position:'absolute',shadowRadius:5,shadowColor:'#000',shadowOpacity:0.3},shadowHorizontal:{top:0,bottom:0,width:3,shadowOffset:{width:-1,height:1}},shadowLeft:{left:0},shadowRight:{right:0},shadowVertical:{left:0,right:0,height:3,shadowOffset:{width:1,height:-1}},shadowTop:{top:0},shadowBottom:{bottom:0}});","map":{"version":3,"sources":["Card.tsx"],"names":["GESTURE_VELOCITY_IMPACT","TRUE","FALSE","GESTURE_RESPONSE_DISTANCE_HORIZONTAL","GESTURE_RESPONSE_DISTANCE_VERTICAL","useNativeDriver","Platform","Card","React","overlayEnabled","shadowEnabled","gestureEnabled","gestureVelocityImpact","overlay","style","styles","closing","height","width","prevProps","gestureDirection","getInvertedMultiplier","toValue","Animated","velocity","onTransitionStart","spec","transitionSpec","animation","clearTimeout","isInteraction","finished","onClose","onOpen","getDistanceForDirection","enabled","pointerEvents","InteractionManager","nativeEvent","GestureState","onGestureBegin","onGestureCanceled","distance","layout","translation","setTimeout","onGestureEnd","memoize","styleInterpolator","index","current","progress","next","swiping","inverted","layouts","screen","insets","top","right","bottom","left","insetLeft","gestureResponseDistance","maxDeltaX","minOffsetY","hitSlop","invertedMultiplier","minOffsetX","maxDeltaY","containerStyle","contentStyle","interpolatedStyle","animationContext","shadowStyle","handleGestureEvent","translationY","gesture","translationX","backgroundColor","StyleSheet","isTransparent","Color","opacity","absoluteFill","overlayStyle","handleGestureStateChange","container","flex","shadow","position","shadowRadius","shadowColor","shadowOpacity","shadowHorizontal","shadowOffset","shadowLeft","shadowRight","shadowVertical","shadowTop","shadowBottom"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  View,\n  StyleSheet,\n  ViewProps,\n  StyleProp,\n  ViewStyle,\n  Platform,\n  InteractionManager,\n} from 'react-native';\nimport type { EdgeInsets } from 'react-native-safe-area-context';\nimport Color from 'color';\n\nimport CardSheet from './CardSheet';\nimport {\n  PanGestureHandler,\n  GestureState,\n  PanGestureHandlerGestureEvent,\n} from '../GestureHandler';\nimport CardAnimationContext from '../../utils/CardAnimationContext';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nimport getInvertedMultiplier from '../../utils/getInvertedMultiplier';\nimport memoize from '../../utils/memoize';\nimport type {\n  TransitionSpec,\n  StackCardStyleInterpolator,\n  GestureDirection,\n  Layout,\n} from '../../types';\n\ntype Props = ViewProps & {\n  index: number;\n  closing: boolean;\n  next?: Animated.AnimatedInterpolation;\n  current: Animated.AnimatedInterpolation;\n  gesture: Animated.Value;\n  layout: Layout;\n  insets: EdgeInsets;\n  pageOverflowEnabled: boolean;\n  gestureDirection: GestureDirection;\n  onOpen: () => void;\n  onClose: () => void;\n  onTransitionStart?: (props: { closing: boolean }) => void;\n  onGestureBegin?: () => void;\n  onGestureCanceled?: () => void;\n  onGestureEnd?: () => void;\n  children: React.ReactNode;\n  overlay: (props: {\n    style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  }) => React.ReactNode;\n  overlayEnabled: boolean;\n  shadowEnabled: boolean;\n  gestureEnabled: boolean;\n  gestureResponseDistance?: {\n    vertical?: number;\n    horizontal?: number;\n  };\n  gestureVelocityImpact: number;\n  transitionSpec: {\n    open: TransitionSpec;\n    close: TransitionSpec;\n  };\n  styleInterpolator: StackCardStyleInterpolator;\n  containerStyle?: StyleProp<ViewStyle>;\n  contentStyle?: StyleProp<ViewStyle>;\n};\n\nconst GESTURE_VELOCITY_IMPACT = 0.3;\n\nconst TRUE = 1;\nconst FALSE = 0;\n\n/**\n * The distance of touch start from the edge of the screen where the gesture will be recognized\n */\nconst GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nconst GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\nexport default class Card extends React.Component<Props> {\n  static defaultProps = {\n    overlayEnabled: Platform.OS !== 'ios',\n    shadowEnabled: true,\n    gestureEnabled: true,\n    gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n    overlay: ({\n      style,\n    }: {\n      style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n    }) =>\n      style ? (\n        <Animated.View pointerEvents=\"none\" style={[styles.overlay, style]} />\n      ) : null,\n  };\n\n  componentDidMount() {\n    this.animate({ closing: this.props.closing });\n    this.isCurrentlyMounted = true;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { layout, gestureDirection, closing } = this.props;\n    const { width, height } = layout;\n\n    if (width !== prevProps.layout.width) {\n      this.layout.width.setValue(width);\n    }\n\n    if (height !== prevProps.layout.height) {\n      this.layout.height.setValue(height);\n    }\n\n    if (gestureDirection !== prevProps.gestureDirection) {\n      this.inverted.setValue(getInvertedMultiplier(gestureDirection));\n    }\n\n    const toValue = this.getAnimateToValue(this.props);\n\n    if (\n      this.getAnimateToValue(prevProps) !== toValue ||\n      this.lastToValue !== toValue\n    ) {\n      // We need to trigger the animation when route was closed\n      // Thr route might have been closed by a `POP` action or by a gesture\n      // When route was closed due to a gesture, the animation would've happened already\n      // It's still important to trigger the animation so that `onClose` is called\n      // If `onClose` is not called, cleanup step won't be performed for gestures\n      this.animate({ closing });\n    }\n  }\n\n  componentWillUnmount() {\n    this.isCurrentlyMounted = false;\n    this.handleEndInteraction();\n  }\n\n  private isCurrentlyMounted = false;\n\n  private isClosing = new Animated.Value(FALSE);\n\n  private inverted = new Animated.Value(\n    getInvertedMultiplier(this.props.gestureDirection)\n  );\n\n  private layout = {\n    width: new Animated.Value(this.props.layout.width),\n    height: new Animated.Value(this.props.layout.height),\n  };\n\n  private isSwiping = new Animated.Value(FALSE);\n\n  private interactionHandle: number | undefined;\n\n  private pendingGestureCallback: number | undefined;\n\n  private lastToValue: number | undefined;\n\n  private animate = ({\n    closing,\n    velocity,\n  }: {\n    closing: boolean;\n    velocity?: number;\n  }) => {\n    const {\n      gesture,\n      transitionSpec,\n      onOpen,\n      onClose,\n      onTransitionStart,\n    } = this.props;\n\n    const toValue = this.getAnimateToValue({\n      ...this.props,\n      closing,\n    });\n\n    this.lastToValue = toValue;\n\n    const spec = closing ? transitionSpec.close : transitionSpec.open;\n\n    const animation =\n      spec.animation === 'spring' ? Animated.spring : Animated.timing;\n\n    this.setPointerEventsEnabled(!closing);\n    this.handleStartInteraction();\n\n    clearTimeout(this.pendingGestureCallback);\n\n    onTransitionStart?.({ closing });\n    animation(gesture, {\n      ...spec.config,\n      velocity,\n      toValue,\n      useNativeDriver,\n      isInteraction: false,\n    }).start(({ finished }) => {\n      this.handleEndInteraction();\n\n      clearTimeout(this.pendingGestureCallback);\n\n      if (finished) {\n        if (closing) {\n          onClose();\n        } else {\n          onOpen();\n        }\n\n        if (this.isCurrentlyMounted) {\n          // Make sure to re-open screen if it wasn't removed\n          this.forceUpdate();\n        }\n      }\n    });\n  };\n\n  private getAnimateToValue = ({\n    closing,\n    layout,\n    gestureDirection,\n  }: {\n    closing?: boolean;\n    layout: Layout;\n    gestureDirection: GestureDirection;\n  }) => {\n    if (!closing) {\n      return 0;\n    }\n\n    return getDistanceForDirection(layout, gestureDirection);\n  };\n\n  private setPointerEventsEnabled = (enabled: boolean) => {\n    const pointerEvents = enabled ? 'box-none' : 'none';\n\n    this.contentRef.current?.setNativeProps({ pointerEvents });\n  };\n\n  private handleStartInteraction = () => {\n    if (this.interactionHandle === undefined) {\n      this.interactionHandle = InteractionManager.createInteractionHandle();\n    }\n  };\n\n  private handleEndInteraction = () => {\n    if (this.interactionHandle !== undefined) {\n      InteractionManager.clearInteractionHandle(this.interactionHandle);\n      this.interactionHandle = undefined;\n    }\n  };\n\n  private handleGestureStateChange = ({\n    nativeEvent,\n  }: PanGestureHandlerGestureEvent) => {\n    const {\n      layout,\n      onClose,\n      onGestureBegin,\n      onGestureCanceled,\n      onGestureEnd,\n      gestureDirection,\n      gestureVelocityImpact,\n    } = this.props;\n\n    switch (nativeEvent.state) {\n      case GestureState.BEGAN:\n        this.isSwiping.setValue(TRUE);\n        this.handleStartInteraction();\n        onGestureBegin?.();\n        break;\n      case GestureState.CANCELLED: {\n        this.isSwiping.setValue(FALSE);\n        this.handleEndInteraction();\n\n        const velocity =\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n            ? nativeEvent.velocityY\n            : nativeEvent.velocityX;\n\n        this.animate({ closing: this.props.closing, velocity });\n\n        onGestureCanceled?.();\n        break;\n      }\n      case GestureState.END: {\n        this.isSwiping.setValue(FALSE);\n\n        let distance;\n        let translation;\n        let velocity;\n\n        if (\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n        ) {\n          distance = layout.height;\n          translation = nativeEvent.translationY;\n          velocity = nativeEvent.velocityY;\n        } else {\n          distance = layout.width;\n          translation = nativeEvent.translationX;\n          velocity = nativeEvent.velocityX;\n        }\n\n        const closing =\n          (translation + velocity * gestureVelocityImpact) *\n            getInvertedMultiplier(gestureDirection) >\n          distance / 2\n            ? velocity !== 0 || translation !== 0\n            : this.props.closing;\n\n        this.animate({ closing, velocity });\n\n        if (closing) {\n          // We call onClose with a delay to make sure that the animation has already started\n          // This will make sure that the state update caused by this doesn't affect start of animation\n          this.pendingGestureCallback = (setTimeout(() => {\n            onClose();\n\n            // Trigger an update after we dispatch the action to remove the screen\n            // This will make sure that we check if the screen didn't get removed so we can cancel the animation\n            this.forceUpdate();\n          }, 32) as any) as number;\n        }\n\n        onGestureEnd?.();\n        break;\n      }\n    }\n  };\n\n  // Memoize this to avoid extra work on re-render\n  private getInterpolatedStyle = memoize(\n    (\n      styleInterpolator: StackCardStyleInterpolator,\n      index: number,\n      current: Animated.AnimatedInterpolation,\n      next: Animated.AnimatedInterpolation | undefined,\n      layout: Layout,\n      insetTop: number,\n      insetRight: number,\n      insetBottom: number,\n      insetLeft: number\n    ) =>\n      styleInterpolator({\n        index,\n        current: { progress: current },\n        next: next && { progress: next },\n        closing: this.isClosing,\n        swiping: this.isSwiping,\n        inverted: this.inverted,\n        layouts: {\n          screen: layout,\n        },\n        insets: {\n          top: insetTop,\n          right: insetRight,\n          bottom: insetBottom,\n          left: insetLeft,\n        },\n      })\n  );\n\n  // Keep track of the animation context when deps changes.\n  private getCardAnimationContext = memoize(\n    (\n      index: number,\n      current: Animated.AnimatedInterpolation,\n      next: Animated.AnimatedInterpolation | undefined,\n      layout: Layout,\n      insetTop: number,\n      insetRight: number,\n      insetBottom: number,\n      insetLeft: number\n    ) => ({\n      index,\n      current: { progress: current },\n      next: next && { progress: next },\n      closing: this.isClosing,\n      swiping: this.isSwiping,\n      inverted: this.inverted,\n      layouts: {\n        screen: layout,\n      },\n      insets: {\n        top: insetTop,\n        right: insetRight,\n        bottom: insetBottom,\n        left: insetLeft,\n      },\n    })\n  );\n\n  private gestureActivationCriteria() {\n    const { layout, gestureDirection, gestureResponseDistance } = this.props;\n\n    const distance =\n      gestureDirection === 'vertical' ||\n      gestureDirection === 'vertical-inverted'\n        ? gestureResponseDistance?.vertical !== undefined\n          ? gestureResponseDistance.vertical\n          : GESTURE_RESPONSE_DISTANCE_VERTICAL\n        : gestureResponseDistance?.horizontal !== undefined\n        ? gestureResponseDistance.horizontal\n        : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n\n    if (gestureDirection === 'vertical') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: 5,\n        hitSlop: { bottom: -layout.height + distance },\n      };\n    } else if (gestureDirection === 'vertical-inverted') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: -5,\n        hitSlop: { top: -layout.height + distance },\n      };\n    } else {\n      const hitSlop = -layout.width + distance;\n      const invertedMultiplier = getInvertedMultiplier(gestureDirection);\n\n      if (invertedMultiplier === 1) {\n        return {\n          minOffsetX: 5,\n          maxDeltaY: 20,\n          hitSlop: { right: hitSlop },\n        };\n      } else {\n        return {\n          minOffsetX: -5,\n          maxDeltaY: 20,\n          hitSlop: { left: hitSlop },\n        };\n      }\n    }\n  }\n\n  private contentRef = React.createRef<View>();\n\n  render() {\n    const {\n      styleInterpolator,\n      index,\n      current,\n      gesture,\n      next,\n      layout,\n      insets,\n      overlay,\n      overlayEnabled,\n      shadowEnabled,\n      gestureEnabled,\n      gestureDirection,\n      pageOverflowEnabled,\n      children,\n      containerStyle: customContainerStyle,\n      contentStyle,\n      ...rest\n    } = this.props;\n\n    const interpolatedStyle = this.getInterpolatedStyle(\n      styleInterpolator,\n      index,\n      current,\n      next,\n      layout,\n      insets.top,\n      insets.right,\n      insets.bottom,\n      insets.left\n    );\n\n    const animationContext = this.getCardAnimationContext(\n      index,\n      current,\n      next,\n      layout,\n      insets.top,\n      insets.right,\n      insets.bottom,\n      insets.left\n    );\n\n    const {\n      containerStyle,\n      cardStyle,\n      overlayStyle,\n      shadowStyle,\n    } = interpolatedStyle;\n\n    const handleGestureEvent = gestureEnabled\n      ? Animated.event(\n          [\n            {\n              nativeEvent:\n                gestureDirection === 'vertical' ||\n                gestureDirection === 'vertical-inverted'\n                  ? { translationY: gesture }\n                  : { translationX: gesture },\n            },\n          ],\n          { useNativeDriver }\n        )\n      : undefined;\n\n    const { backgroundColor } = StyleSheet.flatten(contentStyle || {});\n    const isTransparent =\n      typeof backgroundColor === 'string'\n        ? Color(backgroundColor).alpha() === 0\n        : false;\n\n    return (\n      <CardAnimationContext.Provider value={animationContext}>\n        <Animated.View\n          style={{\n            // This is a dummy style that doesn't actually change anything visually.\n            // Animated needs the animated value to be used somewhere, otherwise things don't update properly.\n            // If we disable animations and hide header, it could end up making the value unused.\n            // So we have this dummy style that will always be used regardless of what else changed.\n            opacity: current,\n          }}\n          // Make sure that this view isn't removed. If this view is removed, our style with animated value won't apply\n          collapsable={false}\n        />\n        <View pointerEvents=\"box-none\" {...rest}>\n          {overlayEnabled ? (\n            <View pointerEvents=\"box-none\" style={StyleSheet.absoluteFill}>\n              {overlay({ style: overlayStyle })}\n            </View>\n          ) : null}\n          <Animated.View\n            style={[styles.container, containerStyle, customContainerStyle]}\n            pointerEvents=\"box-none\"\n          >\n            <PanGestureHandler\n              enabled={layout.width !== 0 && gestureEnabled}\n              onGestureEvent={handleGestureEvent}\n              onHandlerStateChange={this.handleGestureStateChange}\n              {...this.gestureActivationCriteria()}\n            >\n              <Animated.View style={[styles.container, cardStyle]}>\n                {shadowEnabled && shadowStyle && !isTransparent ? (\n                  <Animated.View\n                    style={[\n                      styles.shadow,\n                      gestureDirection === 'horizontal'\n                        ? [styles.shadowHorizontal, styles.shadowLeft]\n                        : gestureDirection === 'horizontal-inverted'\n                        ? [styles.shadowHorizontal, styles.shadowRight]\n                        : gestureDirection === 'vertical'\n                        ? [styles.shadowVertical, styles.shadowTop]\n                        : [styles.shadowVertical, styles.shadowBottom],\n                      { backgroundColor },\n                      shadowStyle,\n                    ]}\n                    pointerEvents=\"none\"\n                  />\n                ) : null}\n                <CardSheet\n                  ref={this.contentRef}\n                  enabled={pageOverflowEnabled}\n                  layout={layout}\n                  style={contentStyle}\n                >\n                  {children}\n                </CardSheet>\n              </Animated.View>\n            </PanGestureHandler>\n          </Animated.View>\n        </View>\n      </CardAnimationContext.Provider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  shadow: {\n    position: 'absolute',\n    shadowRadius: 5,\n    shadowColor: '#000',\n    shadowOpacity: 0.3,\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    shadowOffset: { width: -1, height: 1 },\n  },\n  shadowLeft: {\n    left: 0,\n  },\n  shadowRight: {\n    right: 0,\n  },\n  shadowVertical: {\n    left: 0,\n    right: 0,\n    height: 3,\n    shadowOffset: { width: 1, height: -1 },\n  },\n  shadowTop: {\n    top: 0,\n  },\n  shadowBottom: {\n    bottom: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}