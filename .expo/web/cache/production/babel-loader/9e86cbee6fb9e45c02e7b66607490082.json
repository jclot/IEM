{"ast":null,"code":"import*as React from'react';var MISSING_CONTEXT_ERROR=\"Couldn't find a navigation context. Have you wrapped your app with 'NavigationContainer'? See https://reactnavigation.org/docs/getting-started for setup instructions.\";export default React.createContext({isDefault:true,get getKey(){throw new Error(MISSING_CONTEXT_ERROR);},get setKey(){throw new Error(MISSING_CONTEXT_ERROR);},get getState(){throw new Error(MISSING_CONTEXT_ERROR);},get setState(){throw new Error(MISSING_CONTEXT_ERROR);},get getIsInitial(){throw new Error(MISSING_CONTEXT_ERROR);}});","map":{"version":3,"sources":["NavigationStateContext.tsx"],"names":["MISSING_CONTEXT_ERROR","isDefault"],"mappings":"AAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,CAGA,GAAMA,CAAAA,qBAAqB,CAA3B,wKAAA,CAGA,cAAe,CAAA,KAAK,CAAL,aAAA,CAcZ,CACDC,SAAS,CADR,IAAA,CAGD,GAAA,CAAA,MAAA,EAAkB,CAChB,KAAM,IAAA,CAAA,KAAA,CAAN,qBAAM,CAAN,CAJD,CAAA,CAMD,GAAA,CAAA,MAAA,EAAkB,CAChB,KAAM,IAAA,CAAA,KAAA,CAAN,qBAAM,CAAN,CAPD,CAAA,CASD,GAAA,CAAA,QAAA,EAAoB,CAClB,KAAM,IAAA,CAAA,KAAA,CAAN,qBAAM,CAAN,CAVD,CAAA,CAYD,GAAA,CAAA,QAAA,EAAoB,CAClB,KAAM,IAAA,CAAA,KAAA,CAAN,qBAAM,CAAN,CAbD,CAAA,CAeD,GAAA,CAAA,YAAA,EAAwB,CACtB,KAAM,IAAA,CAAA,KAAA,CAAN,qBAAM,CAAN,CACD,CAjBA,CAdY,CAAf","sourcesContent":["import * as React from 'react';\nimport type { NavigationState, PartialState } from '@react-navigation/routers';\n\nconst MISSING_CONTEXT_ERROR =\n  \"Couldn't find a navigation context. Have you wrapped your app with 'NavigationContainer'? See https://reactnavigation.org/docs/getting-started for setup instructions.\";\n\nexport default React.createContext<{\n  isDefault?: true;\n  state?: NavigationState | PartialState<NavigationState>;\n  getKey: () => string | undefined;\n  setKey: (key: string) => void;\n  getState: () => NavigationState | PartialState<NavigationState> | undefined;\n  setState: (\n    state: NavigationState | PartialState<NavigationState> | undefined\n  ) => void;\n  getIsInitial: () => boolean;\n  addOptionsGetter?: (\n    key: string,\n    getter: () => object | undefined | null\n  ) => void;\n}>({\n  isDefault: true,\n\n  get getKey(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get setKey(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get getState(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get setState(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get getIsInitial(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n});\n"]},"metadata":{},"sourceType":"module"}