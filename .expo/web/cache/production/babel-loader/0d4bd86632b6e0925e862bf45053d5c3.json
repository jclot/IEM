{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import*as React from'react';import Keyboard from\"react-native-web/dist/exports/Keyboard\";import Platform from\"react-native-web/dist/exports/Platform\";export default function useIsKeyboardShown(){var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),isKeyboardShown=_React$useState2[0],setIsKeyboardShown=_React$useState2[1];React.useEffect(function(){var handleKeyboardShow=function handleKeyboardShow(){return setIsKeyboardShown(true);};var handleKeyboardHide=function handleKeyboardHide(){return setIsKeyboardShown(false);};if(Platform.OS==='ios'){Keyboard.addListener('keyboardWillShow',handleKeyboardShow);Keyboard.addListener('keyboardWillHide',handleKeyboardHide);}else{Keyboard.addListener('keyboardDidShow',handleKeyboardShow);Keyboard.addListener('keyboardDidHide',handleKeyboardHide);}return function(){if(Platform.OS==='ios'){Keyboard.removeListener('keyboardWillShow',handleKeyboardShow);Keyboard.removeListener('keyboardWillHide',handleKeyboardHide);}else{Keyboard.removeListener('keyboardDidShow',handleKeyboardShow);Keyboard.removeListener('keyboardDidHide',handleKeyboardHide);}};},[]);return isKeyboardShown;}","map":{"version":3,"sources":["useIsKeyboardShown.tsx"],"names":["React","handleKeyboardShow","setIsKeyboardShown","handleKeyboardHide","Platform","Keyboard"],"mappings":"iEAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,0HAGA,cAAe,SAAA,CAAA,kBAAA,EAA8B,qBACGA,KAAK,CAALA,QAAAA,CAA9C,KAA8CA,CADH,oDACrC,eADqC,qBACrC,kBADqC,qBAG3CA,KAAK,CAALA,SAAAA,CAAgB,UAAM,CACpB,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,SAAMC,CAAAA,kBAAkB,CAAnD,IAAmD,CAAxB,EAA3B,CACA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,SAAMD,CAAAA,kBAAkB,CAAnD,KAAmD,CAAxB,EAA3B,CAEA,GAAIE,QAAQ,CAARA,EAAAA,GAAJ,KAAA,CAA2B,CACzBC,QAAQ,CAARA,WAAAA,CAAAA,kBAAAA,CAAAA,kBAAAA,EACAA,QAAQ,CAARA,WAAAA,CAAAA,kBAAAA,CAAAA,kBAAAA,EAFF,CAAA,IAGO,CACLA,QAAQ,CAARA,WAAAA,CAAAA,iBAAAA,CAAAA,kBAAAA,EACAA,QAAQ,CAARA,WAAAA,CAAAA,iBAAAA,CAAAA,kBAAAA,EACD,CAED,MAAO,WAAM,CACX,GAAID,QAAQ,CAARA,EAAAA,GAAJ,KAAA,CAA2B,CACzBC,QAAQ,CAARA,cAAAA,CAAAA,kBAAAA,CAAAA,kBAAAA,EACAA,QAAQ,CAARA,cAAAA,CAAAA,kBAAAA,CAAAA,kBAAAA,EAFF,CAAA,IAGO,CACLA,QAAQ,CAARA,cAAAA,CAAAA,iBAAAA,CAAAA,kBAAAA,EACAA,QAAQ,CAARA,cAAAA,CAAAA,iBAAAA,CAAAA,kBAAAA,EACD,CAPH,CAAA,CAZFL,CAAAA,CAAAA,EAAAA,EAuBA,MAAA,CAAA,eAAA,CACD","sourcesContent":["import * as React from 'react';\nimport { Keyboard, Platform } from 'react-native';\n\nexport default function useIsKeyboardShown() {\n  const [isKeyboardShown, setIsKeyboardShown] = React.useState(false);\n\n  React.useEffect(() => {\n    const handleKeyboardShow = () => setIsKeyboardShown(true);\n    const handleKeyboardHide = () => setIsKeyboardShown(false);\n\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', handleKeyboardHide);\n    }\n\n    return () => {\n      if (Platform.OS === 'ios') {\n        Keyboard.removeListener('keyboardWillShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardWillHide', handleKeyboardHide);\n      } else {\n        Keyboard.removeListener('keyboardDidShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardDidHide', handleKeyboardHide);\n      }\n    };\n  }, []);\n\n  return isKeyboardShown;\n}\n"]},"metadata":{},"sourceType":"module"}