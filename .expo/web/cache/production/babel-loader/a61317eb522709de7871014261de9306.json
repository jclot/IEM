{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import{nanoid}from'nanoid/non-secure';import BaseRouter from\"./BaseRouter\";export var StackActions={replace:function replace(name,params){return{type:'REPLACE',payload:{name:name,params:params}};},push:function push(name,params){return{type:'PUSH',payload:{name:name,params:params}};},pop:function pop(){var count=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;return{type:'POP',payload:{count:count}};},popToTop:function popToTop(){return{type:'POP_TO_TOP'};}};export default function StackRouter(options){var router=_objectSpread(_objectSpread({},BaseRouter),{},{type:'stack',getInitialState:function getInitialState(_ref){var routeNames=_ref.routeNames,routeParamList=_ref.routeParamList;var initialRouteName=options.initialRouteName!==undefined&&routeNames.includes(options.initialRouteName)?options.initialRouteName:routeNames[0];return{stale:false,type:'stack',key:\"stack-\".concat(nanoid()),index:0,routeNames:routeNames,routes:[{key:\"\".concat(initialRouteName,\"-\").concat(nanoid()),name:initialRouteName,params:routeParamList[initialRouteName]}]};},getRehydratedState:function getRehydratedState(partialState,_ref2){var routeNames=_ref2.routeNames,routeParamList=_ref2.routeParamList;var state=partialState;if(state.stale===false){return state;}var routes=state.routes.filter(function(route){return routeNames.includes(route.name);}).map(function(route){return _objectSpread(_objectSpread({},route),{},{key:route.key||\"\".concat(route.name,\"-\").concat(nanoid()),params:routeParamList[route.name]!==undefined?_objectSpread(_objectSpread({},routeParamList[route.name]),route.params):route.params});});if(routes.length===0){var initialRouteName=options.initialRouteName!==undefined?options.initialRouteName:routeNames[0];routes.push({key:\"\".concat(initialRouteName,\"-\").concat(nanoid()),name:initialRouteName,params:routeParamList[initialRouteName]});}return{stale:false,type:'stack',key:\"stack-\".concat(nanoid()),index:routes.length-1,routeNames:routeNames,routes:routes};},getStateForRouteNamesChange:function getStateForRouteNamesChange(state,_ref3){var routeNames=_ref3.routeNames,routeParamList=_ref3.routeParamList;var routes=state.routes.filter(function(route){return routeNames.includes(route.name);});if(routes.length===0){var initialRouteName=options.initialRouteName!==undefined&&routeNames.includes(options.initialRouteName)?options.initialRouteName:routeNames[0];routes.push({key:\"\".concat(initialRouteName,\"-\").concat(nanoid()),name:initialRouteName,params:routeParamList[initialRouteName]});}return _objectSpread(_objectSpread({},state),{},{routeNames:routeNames,routes:routes,index:Math.min(state.index,routes.length-1)});},getStateForRouteFocus:function getStateForRouteFocus(state,key){var index=state.routes.findIndex(function(r){return r.key===key;});if(index===-1||index===state.index){return state;}return _objectSpread(_objectSpread({},state),{},{index:index,routes:state.routes.slice(0,index+1)});},getStateForAction:function getStateForAction(state,action,options){var routeParamList=options.routeParamList;switch(action.type){case'REPLACE':{var index=action.target===state.key&&action.source?state.routes.findIndex(function(r){return r.key===action.source;}):state.index;if(index===-1){return null;}var _action$payload=action.payload,name=_action$payload.name,key=_action$payload.key,params=_action$payload.params;if(!state.routeNames.includes(name)){return null;}return _objectSpread(_objectSpread({},state),{},{routes:state.routes.map(function(route,i){return i===index?{key:key!==undefined?key:\"\".concat(name,\"-\").concat(nanoid()),name:name,params:routeParamList[name]!==undefined?_objectSpread(_objectSpread({},routeParamList[name]),params):params}:route;})});}case'PUSH':if(state.routeNames.includes(action.payload.name)){return _objectSpread(_objectSpread({},state),{},{index:state.index+1,routes:[].concat(_toConsumableArray(state.routes),[{key:action.payload.key===undefined?\"\".concat(action.payload.name,\"-\").concat(nanoid()):action.payload.key,name:action.payload.name,params:routeParamList[action.payload.name]!==undefined?_objectSpread(_objectSpread({},routeParamList[action.payload.name]),action.payload.params):action.payload.params}])});}return null;case'POP':{var _index=action.target===state.key&&action.source?state.routes.findIndex(function(r){return r.key===action.source;}):state.index;if(_index>0){var count=Math.max(_index-action.payload.count+1,1);var routes=state.routes.slice(0,count).concat(state.routes.slice(_index+1));return _objectSpread(_objectSpread({},state),{},{index:routes.length-1,routes:routes});}return null;}case'POP_TO_TOP':return router.getStateForAction(state,{type:'POP',payload:{count:state.routes.length-1}},options);case'NAVIGATE':if(action.payload.key||action.payload.name&&state.routeNames.includes(action.payload.name)){var _index2=-1;if(state.routes[state.index].name===action.payload.name&&action.payload.key===undefined||state.routes[state.index].key===action.payload.key){_index2=state.index;}else{for(var i=state.routes.length-1;i>=0;i--){if(state.routes[i].name===action.payload.name&&action.payload.key===undefined||state.routes[i].key===action.payload.key){_index2=i;break;}}}if(_index2===-1&&action.payload.key&&action.payload.name===undefined){return null;}if(_index2===-1&&action.payload.name!==undefined){return router.getStateForAction(state,{type:'PUSH',payload:{key:action.payload.key,name:action.payload.name,params:action.payload.params}},options);}return _objectSpread(_objectSpread({},state),{},{index:_index2,routes:[].concat(_toConsumableArray(state.routes.slice(0,_index2)),[action.payload.params!==undefined?_objectSpread(_objectSpread({},state.routes[_index2]),{},{params:_objectSpread(_objectSpread({},state.routes[_index2].params),action.payload.params)}):state.routes[_index2]])});}return null;case'GO_BACK':if(state.index>0){return router.getStateForAction(state,{type:'POP',payload:{count:1},target:action.target,source:action.source},options);}return null;default:return BaseRouter.getStateForAction(state,action);}},actionCreators:StackActions});return router;}","map":{"version":3,"sources":["StackRouter.tsx"],"names":["StackActions","replace","type","payload","name","params","push","pop","count","popToTop","router","getInitialState","routeParamList","initialRouteName","options","routeNames","stale","key","nanoid","index","routes","getRehydratedState","state","route","getStateForRouteNamesChange","Math","getStateForRouteFocus","r","getStateForAction","action","i","target","source","BaseRouter","actionCreators"],"mappings":"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","sourcesContent":["import { nanoid } from 'nanoid/non-secure';\nimport BaseRouter from './BaseRouter';\nimport type {\n  NavigationState,\n  CommonNavigationAction,\n  Router,\n  DefaultRouterOptions,\n  Route,\n  ParamListBase,\n} from './types';\n\nexport type StackActionType =\n  | {\n      type: 'REPLACE';\n      payload: { name: string; key?: string | undefined; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'PUSH';\n      payload: { name: string; key?: string | undefined; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'POP';\n      payload: { count: number };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'POP_TO_TOP';\n      source?: string;\n      target?: string;\n    };\n\nexport type StackRouterOptions = DefaultRouterOptions;\n\nexport type StackNavigationState = NavigationState & {\n  /**\n   * Type of the router, in this case, it's stack.\n   */\n  type: 'stack';\n};\n\nexport type StackActionHelpers<ParamList extends ParamListBase> = {\n  /**\n   * Replace the current route with a new one.\n   *\n   * @param name Route name of the new route.\n   * @param [params] Params object for the new route.\n   */\n  replace<RouteName extends keyof ParamList>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [RouteName] | [RouteName, ParamList[RouteName]]\n      : [RouteName, ParamList[RouteName]]\n  ): void;\n\n  /**\n   * Push a new screen onto the stack.\n   *\n   * @param name Name of the route for the tab.\n   * @param [params] Params object for the route.\n   */\n  push<RouteName extends keyof ParamList>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [RouteName] | [RouteName, ParamList[RouteName]]\n      : [RouteName, ParamList[RouteName]]\n  ): void;\n\n  /**\n   * Pop a screen from the stack.\n   */\n  pop(count?: number): void;\n\n  /**\n   * Pop to the first route in the stack, dismissing all other screens.\n   */\n  popToTop(): void;\n};\n\nexport const StackActions = {\n  replace(name: string, params?: object): StackActionType {\n    return { type: 'REPLACE', payload: { name, params } };\n  },\n  push(name: string, params?: object): StackActionType {\n    return { type: 'PUSH', payload: { name, params } };\n  },\n  pop(count: number = 1): StackActionType {\n    return { type: 'POP', payload: { count } };\n  },\n  popToTop(): StackActionType {\n    return { type: 'POP_TO_TOP' };\n  },\n};\n\nexport default function StackRouter(options: StackRouterOptions) {\n  const router: Router<\n    StackNavigationState,\n    CommonNavigationAction | StackActionType\n  > = {\n    ...BaseRouter,\n\n    type: 'stack',\n\n    getInitialState({ routeNames, routeParamList }) {\n      const initialRouteName =\n        options.initialRouteName !== undefined &&\n        routeNames.includes(options.initialRouteName)\n          ? options.initialRouteName\n          : routeNames[0];\n\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: 0,\n        routeNames,\n        routes: [\n          {\n            key: `${initialRouteName}-${nanoid()}`,\n            name: initialRouteName,\n            params: routeParamList[initialRouteName],\n          },\n        ],\n      };\n    },\n\n    getRehydratedState(partialState, { routeNames, routeParamList }) {\n      let state = partialState;\n\n      if (state.stale === false) {\n        return state;\n      }\n\n      const routes = state.routes\n        .filter((route) => routeNames.includes(route.name))\n        .map(\n          (route) =>\n            ({\n              ...route,\n              key: route.key || `${route.name}-${nanoid()}`,\n              params:\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...route.params,\n                    }\n                  : route.params,\n            } as Route<string>)\n        );\n\n      if (routes.length === 0) {\n        const initialRouteName =\n          options.initialRouteName !== undefined\n            ? options.initialRouteName\n            : routeNames[0];\n\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName],\n        });\n      }\n\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: routes.length - 1,\n        routeNames,\n        routes,\n      };\n    },\n\n    getStateForRouteNamesChange(state, { routeNames, routeParamList }) {\n      const routes = state.routes.filter((route) =>\n        routeNames.includes(route.name)\n      );\n\n      if (routes.length === 0) {\n        const initialRouteName =\n          options.initialRouteName !== undefined &&\n          routeNames.includes(options.initialRouteName)\n            ? options.initialRouteName\n            : routeNames[0];\n\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName],\n        });\n      }\n\n      return {\n        ...state,\n        routeNames,\n        routes,\n        index: Math.min(state.index, routes.length - 1),\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const index = state.routes.findIndex((r) => r.key === key);\n\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n\n      return {\n        ...state,\n        index,\n        routes: state.routes.slice(0, index + 1),\n      };\n    },\n\n    getStateForAction(state, action, options) {\n      const { routeParamList } = options;\n\n      switch (action.type) {\n        case 'REPLACE': {\n          const index =\n            action.target === state.key && action.source\n              ? state.routes.findIndex((r) => r.key === action.source)\n              : state.index;\n\n          if (index === -1) {\n            return null;\n          }\n\n          const { name, key, params } = action.payload;\n\n          if (!state.routeNames.includes(name)) {\n            return null;\n          }\n\n          return {\n            ...state,\n            routes: state.routes.map((route, i) =>\n              i === index\n                ? {\n                    key: key !== undefined ? key : `${name}-${nanoid()}`,\n                    name,\n                    params:\n                      routeParamList[name] !== undefined\n                        ? {\n                            ...routeParamList[name],\n                            ...params,\n                          }\n                        : params,\n                  }\n                : route\n            ),\n          };\n        }\n\n        case 'PUSH':\n          if (state.routeNames.includes(action.payload.name)) {\n            return {\n              ...state,\n              index: state.index + 1,\n              routes: [\n                ...state.routes,\n                {\n                  key:\n                    action.payload.key === undefined\n                      ? `${action.payload.name}-${nanoid()}`\n                      : action.payload.key,\n                  name: action.payload.name,\n                  params:\n                    routeParamList[action.payload.name] !== undefined\n                      ? {\n                          ...routeParamList[action.payload.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params,\n                },\n              ],\n            };\n          }\n\n          return null;\n\n        case 'POP': {\n          const index =\n            action.target === state.key && action.source\n              ? state.routes.findIndex((r) => r.key === action.source)\n              : state.index;\n\n          if (index > 0) {\n            const count = Math.max(index - action.payload.count + 1, 1);\n            const routes = state.routes\n              .slice(0, count)\n              .concat(state.routes.slice(index + 1));\n\n            return {\n              ...state,\n              index: routes.length - 1,\n              routes,\n            };\n          }\n\n          return null;\n        }\n\n        case 'POP_TO_TOP':\n          return router.getStateForAction(\n            state,\n            {\n              type: 'POP',\n              payload: { count: state.routes.length - 1 },\n            },\n            options\n          );\n\n        case 'NAVIGATE':\n          if (\n            action.payload.key ||\n            (action.payload.name &&\n              state.routeNames.includes(action.payload.name))\n          ) {\n            // If the route already exists, navigate to that\n            let index = -1;\n\n            if (\n              (state.routes[state.index].name === action.payload.name &&\n                action.payload.key === undefined) ||\n              state.routes[state.index].key === action.payload.key\n            ) {\n              index = state.index;\n            } else {\n              for (let i = state.routes.length - 1; i >= 0; i--) {\n                if (\n                  (state.routes[i].name === action.payload.name &&\n                    action.payload.key === undefined) ||\n                  state.routes[i].key === action.payload.key\n                ) {\n                  index = i;\n                  break;\n                }\n              }\n            }\n\n            if (\n              index === -1 &&\n              action.payload.key &&\n              action.payload.name === undefined\n            ) {\n              return null;\n            }\n\n            if (index === -1 && action.payload.name !== undefined) {\n              return router.getStateForAction(\n                state,\n                {\n                  type: 'PUSH',\n                  payload: {\n                    key: action.payload.key,\n                    name: action.payload.name,\n                    params: action.payload.params,\n                  },\n                },\n                options\n              );\n            }\n\n            return {\n              ...state,\n              index,\n              routes: [\n                ...state.routes.slice(0, index),\n                action.payload.params !== undefined\n                  ? {\n                      ...state.routes[index],\n                      params: {\n                        ...state.routes[index].params,\n                        ...action.payload.params,\n                      },\n                    }\n                  : state.routes[index],\n              ],\n            };\n          }\n\n          return null;\n\n        case 'GO_BACK':\n          if (state.index > 0) {\n            return router.getStateForAction(\n              state,\n              {\n                type: 'POP',\n                payload: { count: 1 },\n                target: action.target,\n                source: action.source,\n              },\n              options\n            );\n          }\n\n          return null;\n\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n\n    actionCreators: StackActions,\n  };\n\n  return router;\n}\n"]},"metadata":{},"sourceType":"module"}