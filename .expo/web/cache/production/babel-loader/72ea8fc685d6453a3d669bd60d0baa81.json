{"ast":null,"code":"import React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Badge from\"./Badge\";export default function TabBarIcon(_ref){var horizontal=_ref.horizontal,badge=_ref.badge,activeOpacity=_ref.activeOpacity,inactiveOpacity=_ref.inactiveOpacity,activeTintColor=_ref.activeTintColor,inactiveTintColor=_ref.inactiveTintColor,renderIcon=_ref.renderIcon,style=_ref.style;var size=25;return React.createElement(View,{style:[horizontal?styles.iconHorizontal:styles.iconVertical,style]},React.createElement(View,{style:[styles.icon,{opacity:activeOpacity}]},renderIcon({focused:true,size:size,color:activeTintColor})),React.createElement(View,{style:[styles.icon,{opacity:inactiveOpacity}]},renderIcon({focused:false,size:size,color:inactiveTintColor})),React.createElement(Badge,{visible:badge!=null,style:[styles.badge,horizontal?styles.badgeHorizontal:styles.badgeVertical],size:size*3/4},badge));}var styles=StyleSheet.create({icon:{position:'absolute',alignSelf:'center',alignItems:'center',justifyContent:'center',height:'100%',width:'100%',minWidth:25},iconVertical:{flex:1},iconHorizontal:{height:'100%',marginTop:3},badge:{position:'absolute',left:3},badgeVertical:{top:3},badgeHorizontal:{top:7}});","map":{"version":3,"sources":["TabBarIcon.tsx"],"names":["style","size","horizontal","styles","opacity","activeOpacity","renderIcon","focused","color","activeTintColor","inactiveOpacity","inactiveTintColor","badge","icon","position","alignSelf","alignItems","justifyContent","height","width","minWidth","iconVertical","flex","iconHorizontal","marginTop","left","badgeVertical","top","badgeHorizontal"],"mappings":"AAAA,MAAA,CAAA,KAAA,KAAA,OAAA,C,sHAGA,MAAA,CAAA,KAAA,eAkBA,cAAe,SAAA,CAAA,UAAA,MASL,IATyB,CAAA,UASzB,MATyB,UASzB,CATyB,KASzB,MATyB,KASzB,CATyB,aASzB,MATyB,aASzB,CATyB,eASzB,MATyB,eASzB,CATyB,eASzB,MATyB,eASzB,CATyB,iBASzB,MATyB,iBASzB,CATyB,UASzB,MATyB,UASzB,CADRA,KACQ,MADRA,KACQ,CACR,GAAMC,CAAAA,IAAI,CADF,EACR,CAIA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CACE,KAAK,CAAE,CAACC,UAAU,CAAGC,MAAM,CAAT,cAAA,CAA2BA,MAAM,CAA5C,YAAA,CAAA,KAAA,CADT,CAAA,CAGE,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,KAAK,CAAE,CAACA,MAAM,CAAP,IAAA,CAAc,CAAEC,OAAO,CAAEC,aAAX,CAAd,CAAb,CAAA,CACGC,UAAU,CAAC,CACVC,OAAO,CADG,IAAA,CAEVN,IAFU,CAEVA,IAFU,CAGVO,KAAK,CAAEC,eAHG,CAAD,CADb,CAHF,CAUE,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,KAAK,CAAE,CAACN,MAAM,CAAP,IAAA,CAAc,CAAEC,OAAO,CAAEM,eAAX,CAAd,CAAb,CAAA,CACGJ,UAAU,CAAC,CACVC,OAAO,CADG,KAAA,CAEVN,IAFU,CAEVA,IAFU,CAGVO,KAAK,CAAEG,iBAHG,CAAD,CADb,CAVF,CAiBE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,CACE,OAAO,CAAEC,KAAK,EADhB,IAAA,CAEE,KAAK,CAAE,CACLT,MAAM,CADD,KAAA,CAELD,UAAU,CAAGC,MAAM,CAAT,eAAA,CAA4BA,MAAM,CAJhD,aAES,CAFT,CAME,IAAI,CAAGF,IAAI,CAAL,CAACA,CAAY,CANrB,CAAA,CAlBJ,KAkBI,CAjBF,CADF,CA8BD,CAED,GAAME,CAAAA,MAAM,CAAG,UAAU,CAAV,MAAA,CAAkB,CAC/BU,IAAI,CAAE,CAIJC,QAAQ,CAJJ,UAAA,CAKJC,SAAS,CALL,QAAA,CAMJC,UAAU,CANN,QAAA,CAOJC,cAAc,CAPV,QAAA,CAQJC,MAAM,CARF,MAAA,CASJC,KAAK,CATD,MAAA,CAWJC,QAAQ,CAAE,EAXN,CADyB,CAc/BC,YAAY,CAAE,CACZC,IAAI,CAAE,CADM,CAdiB,CAiB/BC,cAAc,CAAE,CACdL,MAAM,CADQ,MAAA,CAEdM,SAAS,CAAE,CAFG,CAjBe,CAqB/BZ,KAAK,CAAE,CACLE,QAAQ,CADH,UAAA,CAELW,IAAI,CAAE,CAFD,CArBwB,CAyB/BC,aAAa,CAAE,CACbC,GAAG,CAAE,CADQ,CAzBgB,CA4B/BC,eAAe,CAAE,CACfD,GAAG,CAAE,CADU,CA5Bc,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport type { Route } from '@react-navigation/native';\nimport Badge from './Badge';\n\ntype Props = {\n  route: Route<string>;\n  horizontal: boolean;\n  badge?: string | number;\n  activeOpacity: number;\n  inactiveOpacity: number;\n  activeTintColor: string;\n  inactiveTintColor: string;\n  renderIcon: (props: {\n    focused: boolean;\n    color: string;\n    size: number;\n  }) => React.ReactNode;\n  style: StyleProp<ViewStyle>;\n};\n\nexport default function TabBarIcon({\n  horizontal,\n  badge,\n  activeOpacity,\n  inactiveOpacity,\n  activeTintColor,\n  inactiveTintColor,\n  renderIcon,\n  style,\n}: Props) {\n  const size = 25;\n\n  // We render the icon twice at the same position on top of each other:\n  // active and inactive one, so we can fade between them.\n  return (\n    <View\n      style={[horizontal ? styles.iconHorizontal : styles.iconVertical, style]}\n    >\n      <View style={[styles.icon, { opacity: activeOpacity }]}>\n        {renderIcon({\n          focused: true,\n          size,\n          color: activeTintColor,\n        })}\n      </View>\n      <View style={[styles.icon, { opacity: inactiveOpacity }]}>\n        {renderIcon({\n          focused: false,\n          size,\n          color: inactiveTintColor,\n        })}\n      </View>\n      <Badge\n        visible={badge != null}\n        style={[\n          styles.badge,\n          horizontal ? styles.badgeHorizontal : styles.badgeVertical,\n        ]}\n        size={(size * 3) / 4}\n      >\n        {badge}\n      </Badge>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    // We render the icon twice at the same position on top of each other:\n    // active and inactive one, so we can fade between them:\n    // Cover the whole iconContainer:\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    // Workaround for react-native >= 0.54 layout bug\n    minWidth: 25,\n  },\n  iconVertical: {\n    flex: 1,\n  },\n  iconHorizontal: {\n    height: '100%',\n    marginTop: 3,\n  },\n  badge: {\n    position: 'absolute',\n    left: 3,\n  },\n  badgeVertical: {\n    top: 3,\n  },\n  badgeHorizontal: {\n    top: 7,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}