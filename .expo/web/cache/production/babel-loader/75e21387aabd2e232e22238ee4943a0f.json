{"ast":null,"code":"function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import NavigationStateContext from\"./NavigationStateContext\";import StaticContainer from\"./StaticContainer\";import EnsureSingleNavigator from\"./EnsureSingleNavigator\";import useOptionsGetters from\"./useOptionsGetters\";export default function SceneView(_ref){var screen=_ref.screen,route=_ref.route,navigation=_ref.navigation,getState=_ref.getState,setState=_ref.setState,options=_ref.options;var navigatorKeyRef=React.useRef();var getKey=React.useCallback(function(){return navigatorKeyRef.current;},[]);var _useOptionsGetters=useOptionsGetters({key:route.key,options:options,navigation:navigation}),addOptionsGetter=_useOptionsGetters.addOptionsGetter;var setKey=React.useCallback(function(key){navigatorKeyRef.current=key;},[]);var getCurrentState=React.useCallback(function(){var state=getState();var currentRoute=state.routes.find(function(r){return r.key===route.key;});return currentRoute?currentRoute.state:undefined;},[getState,route.key]);var setCurrentState=React.useCallback(function(child){var state=getState();setState(_objectSpread(_objectSpread({},state),{},{routes:state.routes.map(function(r){return r.key===route.key?_objectSpread(_objectSpread({},r),{},{state:child}):r;})}));},[getState,route.key,setState]);var isInitialRef=React.useRef(true);React.useEffect(function(){isInitialRef.current=false;});var getIsInitial=React.useCallback(function(){return isInitialRef.current;},[]);var context=React.useMemo(function(){return{state:route.state,getState:getCurrentState,setState:setCurrentState,getKey:getKey,setKey:setKey,getIsInitial:getIsInitial,addOptionsGetter:addOptionsGetter};},[route.state,getCurrentState,setCurrentState,getKey,setKey,getIsInitial,addOptionsGetter]);var ScreenComponent=screen.getComponent?screen.getComponent():screen.component;return React.createElement(NavigationStateContext.Provider,{value:context},React.createElement(EnsureSingleNavigator,null,React.createElement(StaticContainer,{name:screen.name,render:ScreenComponent||screen.children,navigation:navigation,route:route},ScreenComponent!==undefined?React.createElement(ScreenComponent,{navigation:navigation,route:route}):screen.children!==undefined?screen.children({navigation:navigation,route:route}):null)));}","map":{"version":3,"sources":["SceneView.tsx"],"names":["options","navigatorKeyRef","React","getKey","addOptionsGetter","useOptionsGetters","key","route","navigation","setKey","getCurrentState","state","getState","currentRoute","r","setCurrentState","child","setState","routes","isInitialRef","getIsInitial","context","ScreenComponent","screen"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport type {\n  Route,\n  ParamListBase,\n  NavigationState,\n  PartialState,\n} from '@react-navigation/routers';\nimport NavigationStateContext from './NavigationStateContext';\nimport StaticContainer from './StaticContainer';\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport useOptionsGetters from './useOptionsGetters';\nimport type { NavigationProp, RouteConfig, EventMapBase } from './types';\n\ntype Props<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n> = {\n  screen: RouteConfig<ParamListBase, string, State, ScreenOptions, EventMap>;\n  navigation: NavigationProp<ParamListBase, string, State, ScreenOptions>;\n  route: Route<string> & {\n    state?: NavigationState | PartialState<NavigationState>;\n  };\n  getState: () => State;\n  setState: (state: State) => void;\n  options: object;\n};\n\n/**\n * Component which takes care of rendering the screen for a route.\n * It provides all required contexts and applies optimizations when applicable.\n */\nexport default function SceneView<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n>({\n  screen,\n  route,\n  navigation,\n  getState,\n  setState,\n  options,\n}: Props<State, ScreenOptions, EventMap>) {\n  const navigatorKeyRef = React.useRef<string | undefined>();\n  const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n\n  const { addOptionsGetter } = useOptionsGetters({\n    key: route.key,\n    options,\n    navigation,\n  });\n\n  const setKey = React.useCallback((key: string) => {\n    navigatorKeyRef.current = key;\n  }, []);\n\n  const getCurrentState = React.useCallback(() => {\n    const state = getState();\n    const currentRoute = state.routes.find((r) => r.key === route.key);\n\n    return currentRoute ? currentRoute.state : undefined;\n  }, [getState, route.key]);\n\n  const setCurrentState = React.useCallback(\n    (child: NavigationState | PartialState<NavigationState> | undefined) => {\n      const state = getState();\n\n      setState({\n        ...state,\n        routes: state.routes.map((r) =>\n          r.key === route.key ? { ...r, state: child } : r\n        ),\n      });\n    },\n    [getState, route.key, setState]\n  );\n\n  const isInitialRef = React.useRef(true);\n\n  React.useEffect(() => {\n    isInitialRef.current = false;\n  });\n\n  const getIsInitial = React.useCallback(() => isInitialRef.current, []);\n\n  const context = React.useMemo(\n    () => ({\n      state: route.state,\n      getState: getCurrentState,\n      setState: setCurrentState,\n      getKey,\n      setKey,\n      getIsInitial,\n      addOptionsGetter,\n    }),\n    [\n      route.state,\n      getCurrentState,\n      setCurrentState,\n      getKey,\n      setKey,\n      getIsInitial,\n      addOptionsGetter,\n    ]\n  );\n\n  const ScreenComponent = screen.getComponent\n    ? screen.getComponent()\n    : screen.component;\n\n  return (\n    <NavigationStateContext.Provider value={context}>\n      <EnsureSingleNavigator>\n        <StaticContainer\n          name={screen.name}\n          render={ScreenComponent || screen.children}\n          navigation={navigation}\n          route={route}\n        >\n          {ScreenComponent !== undefined ? (\n            <ScreenComponent navigation={navigation} route={route} />\n          ) : screen.children !== undefined ? (\n            screen.children({ navigation, route })\n          ) : null}\n        </StaticContainer>\n      </EnsureSingleNavigator>\n    </NavigationStateContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}