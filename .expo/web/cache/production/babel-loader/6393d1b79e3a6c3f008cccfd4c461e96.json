{"ast":null,"code":"function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import{useNavigationBuilder,createNavigatorFactory,StackRouter,StackActions}from'@react-navigation/native';import StackView from\"../views/Stack/StackView\";function StackNavigator(_ref){var initialRouteName=_ref.initialRouteName,children=_ref.children,screenOptions=_ref.screenOptions,rest=_objectWithoutProperties(_ref,[\"initialRouteName\",\"children\",\"screenOptions\"]);var defaultOptions={gestureEnabled:Platform.OS==='ios',animationEnabled:Platform.OS!=='web'&&Platform.OS!=='windows'&&Platform.OS!=='macos'};var _useNavigationBuilder=useNavigationBuilder(StackRouter,{initialRouteName:initialRouteName,children:children,screenOptions:typeof screenOptions==='function'?function(){return _objectSpread(_objectSpread({},defaultOptions),screenOptions.apply(void 0,arguments));}:_objectSpread(_objectSpread({},defaultOptions),screenOptions)}),state=_useNavigationBuilder.state,descriptors=_useNavigationBuilder.descriptors,navigation=_useNavigationBuilder.navigation;React.useEffect(function(){return navigation.addListener&&navigation.addListener('tabPress',function(e){var isFocused=navigation.isFocused();requestAnimationFrame(function(){if(state.index>0&&isFocused&&!e.defaultPrevented){navigation.dispatch(_objectSpread(_objectSpread({},StackActions.popToTop()),{},{target:state.key}));}});});},[navigation,state.index,state.key]);return React.createElement(StackView,_extends({},rest,{state:state,descriptors:descriptors,navigation:navigation}));}export default createNavigatorFactory(StackNavigator);","map":{"version":3,"sources":["createStackNavigator.tsx"],"names":["screenOptions","rest","defaultOptions","gestureEnabled","Platform","animationEnabled","navigation","useNavigationBuilder","initialRouteName","children","React","e","isFocused","requestAnimationFrame","state","StackActions","target","key","createNavigatorFactory"],"mappings":"i7DAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,6DAEA,OAAA,oBAAA,CAAA,sBAAA,CAAA,WAAA,CAAA,YAAA,KAAA,0BAAA,CAUA,MAAA,CAAA,SAAA,gCAWA,QAAA,CAAA,cAAA,CAAA,IAAA,CAKU,IALc,CAAA,gBAKd,CAAA,IAAA,CALc,gBAKd,CALc,QAKd,CAAA,IAAA,CALc,QAKd,CAFRA,aAEQ,CAAA,IAAA,CAFRA,aAEQ,CADLC,IACK,CAAA,wBAAA,CAAA,IAAA,CAAA,CAAA,kBAAA,CAAA,UAAA,CAAA,eAAA,CAAA,CAAA,CACR,GAAMC,CAAAA,cAAc,CAAG,CACrBC,cAAc,CAAEC,QAAQ,CAARA,EAAAA,GADK,KAAA,CAErBC,gBAAgB,CACdD,QAAQ,CAARA,EAAAA,GAAAA,KAAAA,EACAA,QAAQ,CAARA,EAAAA,GADAA,SAAAA,EAEAA,QAAQ,CAARA,EAAAA,GAAgB,OALG,CAAvB,CADQ,0BASmCG,oBAAoB,CAAA,WAAA,CAKhD,CACbC,gBADa,CACbA,gBADa,CAEbC,QAFa,CAEbA,QAFa,CAGbT,aAAa,CACX,MAAA,CAAA,aAAA,GAAA,UAAA,CACI,iBAAA,CAAA,aAAA,CAAA,aAAA,CAAA,EAAA,CAAA,cAAA,CAAA,CAEKA,aAHT,MAGSA,kBAFL,CAAA,EADJ,CAAA,aAAA,CAAA,aAAA,CAAA,EAAA,CAAA,cAAA,CAAA,CAAA,aAAA,CAJW,CALgD,CATvD,CASF,KATE,uBASF,KATE,CASF,WATE,uBASF,WATE,CASoBM,UATpB,uBASoBA,UATpB,CA6BRI,KAAK,CAALA,SAAAA,CACE,iBACEJ,CAAAA,UAAU,CAAVA,WAAAA,EACA,UAAU,CAAV,WAAA,CAAA,UAAA,CAAoCK,SAAAA,CAAD,CAAO,CACxC,GAAMC,CAAAA,SAAS,CAAGN,UAAU,CADY,SACtBA,EAAlB,CAIAO,qBAAqB,CAAC,UAAM,CAC1B,GACEC,KAAK,CAALA,KAAAA,CAAAA,CAAAA,EAAAA,SAAAA,EAEA,CAAEH,CAAD,CAHH,gBAAA,CAIE,CAGAL,UAAU,CAAVA,QAAAA,CAAAA,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,CACKS,YAAY,CADjBT,QACKS,EADLT,CAAAA,CAAAA,EAAAA,CAAAA,CAEEU,MAAM,CAAEF,KAAK,CAACG,GAFhBX,CAAAA,CAAAA,EAID,CAZHO,CAAqB,CAArBA,CARNH,CAGI,CAFF,EADFA,CAuBE,CAAA,UAAA,CAAaI,KAAK,CAAlB,KAAA,CAA0BA,KAAK,CAvBjCJ,GAuBE,CAvBFA,EA0BA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,SAAA,CAAA,QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAEE,KAAK,CAFP,KAAA,CAGE,WAAW,CAHb,WAAA,CAIE,UAAU,CAAEJ,UAJd,CAAA,CAAA,CADF,CAQD,CAED,cAAeY,CAAAA,sBAAsB,CAArC,cAAqC,CAArC","sourcesContent":["import * as React from 'react';\nimport { Platform } from 'react-native';\nimport {\n  useNavigationBuilder,\n  createNavigatorFactory,\n  DefaultNavigatorOptions,\n  EventArg,\n  StackRouter,\n  StackRouterOptions,\n  StackNavigationState,\n  StackActions,\n} from '@react-navigation/native';\nimport StackView from '../views/Stack/StackView';\nimport type {\n  StackNavigationConfig,\n  StackNavigationOptions,\n  StackNavigationEventMap,\n} from '../types';\n\ntype Props = DefaultNavigatorOptions<StackNavigationOptions> &\n  StackRouterOptions &\n  StackNavigationConfig;\n\nfunction StackNavigator({\n  initialRouteName,\n  children,\n  screenOptions,\n  ...rest\n}: Props) {\n  const defaultOptions = {\n    gestureEnabled: Platform.OS === 'ios',\n    animationEnabled:\n      Platform.OS !== 'web' &&\n      Platform.OS !== 'windows' &&\n      Platform.OS !== 'macos',\n  };\n\n  const { state, descriptors, navigation } = useNavigationBuilder<\n    StackNavigationState,\n    StackRouterOptions,\n    StackNavigationOptions,\n    StackNavigationEventMap\n  >(StackRouter, {\n    initialRouteName,\n    children,\n    screenOptions:\n      typeof screenOptions === 'function'\n        ? (...args) => ({\n            ...defaultOptions,\n            ...screenOptions(...args),\n          })\n        : {\n            ...defaultOptions,\n            ...screenOptions,\n          },\n  });\n\n  React.useEffect(\n    () =>\n      navigation.addListener &&\n      navigation.addListener('tabPress', (e) => {\n        const isFocused = navigation.isFocused();\n\n        // Run the operation in the next frame so we're sure all listeners have been run\n        // This is necessary to know if preventDefault() has been called\n        requestAnimationFrame(() => {\n          if (\n            state.index > 0 &&\n            isFocused &&\n            !(e as EventArg<'tabPress', true>).defaultPrevented\n          ) {\n            // When user taps on already focused tab and we're inside the tab,\n            // reset the stack to replicate native behaviour\n            navigation.dispatch({\n              ...StackActions.popToTop(),\n              target: state.key,\n            });\n          }\n        });\n      }),\n    [navigation, state.index, state.key]\n  );\n\n  return (\n    <StackView\n      {...rest}\n      state={state}\n      descriptors={descriptors}\n      navigation={navigation}\n    />\n  );\n}\n\nexport default createNavigatorFactory<\n  StackNavigationState,\n  StackNavigationOptions,\n  StackNavigationEventMap,\n  typeof StackNavigator\n>(StackNavigator);\n"]},"metadata":{},"sourceType":"module"}