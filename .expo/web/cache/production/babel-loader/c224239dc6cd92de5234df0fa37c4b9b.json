{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import*as React from'react';import{nanoid}from'nanoid/non-secure';import{SingleNavigatorContext}from\"./EnsureSingleNavigator\";export default function useRegisterNavigator(){var _React$useState=React.useState(function(){return nanoid();}),_React$useState2=_slicedToArray(_React$useState,1),key=_React$useState2[0];var container=React.useContext(SingleNavigatorContext);if(container===undefined){throw new Error(\"Couldn't register the navigator. Have you wrapped your app with 'NavigationContainer'?\");}React.useEffect(function(){var register=container.register,unregister=container.unregister;register(key);return function(){return unregister(key);};},[container,key]);return key;}","map":{"version":3,"sources":["useRegisterNavigator.tsx"],"names":["React","nanoid","container","unregister","register"],"mappings":"iEAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,CACA,OAAA,MAAA,KAAA,mBAAA,CACA,OAAA,sBAAA,+BAMA,cAAe,SAAA,CAAA,oBAAA,EAAgC,qBAC/BA,KAAK,CAALA,QAAAA,CAAe,iBAAMC,CAAAA,MAAnC,EAA6B,EAAfD,CAD+B,oDACvC,GADuC,qBAE7C,GAAME,CAAAA,SAAS,CAAGF,KAAK,CAALA,UAAAA,CAAlB,sBAAkBA,CAAlB,CAEA,GAAIE,SAAS,GAAb,SAAA,CAA6B,CAC3B,KAAM,IAAA,CAAA,KAAA,CAAN,wFAAM,CAAN,CAGD,CAEDF,KAAK,CAALA,SAAAA,CAAgB,UAAM,IACd,CAAA,QADc,CACpB,SADoB,CACd,QADc,CACFG,UADE,CACpB,SADoB,CACFA,UADE,CAGpBC,QAAQ,CAARA,GAAQ,CAARA,CAEA,MAAO,kBAAMD,CAAAA,UAAU,CAAvB,GAAuB,CAAhB,EAAP,CALFH,CAAAA,CAMG,CAAA,SAAA,CANHA,GAMG,CANHA,EAQA,MAAA,CAAA,GAAA,CACD","sourcesContent":["import * as React from 'react';\nimport { nanoid } from 'nanoid/non-secure';\nimport { SingleNavigatorContext } from './EnsureSingleNavigator';\n\n/**\n * Register a navigator in the parent context (either a navigation container or a screen).\n * This is used to prevent multiple navigators under a single container or screen.\n */\nexport default function useRegisterNavigator() {\n  const [key] = React.useState(() => nanoid());\n  const container = React.useContext(SingleNavigatorContext);\n\n  if (container === undefined) {\n    throw new Error(\n      \"Couldn't register the navigator. Have you wrapped your app with 'NavigationContainer'?\"\n    );\n  }\n\n  React.useEffect(() => {\n    const { register, unregister } = container;\n\n    register(key);\n\n    return () => unregister(key);\n  }, [container, key]);\n\n  return key;\n}\n"]},"metadata":{},"sourceType":"module"}